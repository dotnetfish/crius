/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.adapter;

import android.content.Context;
import android.text.Html;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.bean.ChatItem;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.bean.MessageItemSource;
import cn.cloudartisan.crius.component.EmoticonsTextView;
import cn.cloudartisan.crius.component.WebImageView;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.ui.chat.SystemMessageActivity;
import cn.cloudartisan.crius.util.AppTools;
import cn.cloudartisan.crius.util.MessageTimeDescComparator;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class ConversationListViewAdapter extends BaseAdapter {
    protected Context context;
    protected List<ChatItem> list=new ArrayList<>();
    
    public ConversationListViewAdapter(Context c, List<ChatItem> list) {
        context = c;
        this.list = list;
    }
    
    public int getCount() {
        return list.size();
    }
    
    public ChatItem getItem(int position) {
        return list.get(position);
    }
    
    public long getItemId(int position) {
        return (long)position;
    }
    
    public void notifyDataSetChanged() {
        Collections.sort(list, new MessageTimeDescComparator());
        for(int var1 = 0; var1 < this.list.size(); ++var1) {
            if((this.list.get(var1)).source == null) {
                this.list.remove(var1);
            }
        }

        super.notifyDataSetChanged();

    }
    
    public View getView(int var1, View var2, ViewGroup var3) {
        MessageItemSource var6 = this.getItem(var1).source;
        Message var7 = (this.list.get(var1)).message;
        ConversationListViewAdapter.ViewHolder var9;
        if(var2 == null) {
            var2 = LayoutInflater.from(this.context).inflate(R.layout.item_message, null);
            var9 = new ConversationListViewAdapter.ViewHolder();
            var9.icon = (WebImageView)var2.findViewById(R.id.itemMsgHead);
            var9.senderName = (TextView)var2.findViewById(R.id.senderName);
            var9.status = (ImageView)var2.findViewById(R.id.static_icon);
            var9.newMsgSumLabel = (TextView)var2.findViewById(R.id.item_newmsg_label);
            var9.msgPreview = (EmoticonsTextView)var2.findViewById(R.id.msgPreview);
            var9.timeText = (TextView)var2.findViewById(R.id.timeText);
            var2.setTag(R.id.icon, var9);
        } else {
            var9 = (ConversationListViewAdapter.ViewHolder)var2.getTag(R.id.icon);
        }

        var2.setTag(var6);
        var2.setTag(R.id.message, var7);
        var9.senderName.setText(var6.getTitle());
        var9.senderName.setTextColor(this.context.getResources().getColor(var6.getTitleColor()));
        if(var6.getWebIcon() == null) {
            var9.icon.setImageDrawable(this.context.getResources().getDrawable(var6.getDefaultIconRID()));
        } else {
            var9.icon.load(var6.getWebIcon(), var6.getDefaultIconRID());
        }

        long var4 = MessageDBManager.getManager().countNewExceptTypesBySender(var6.getId(), SystemMessageActivity.containedTypes);
        if(var4 > 0L) {
            var9.newMsgSumLabel.setVisibility(View.VISIBLE);
            TextView var8 = var9.newMsgSumLabel;
            String var10;
            if(var4 > 99L) {
                var10 = "99+";
            } else {
                var10 = String.valueOf(var4);
            }

            var8.setText(var10);
        } else {
            var9.newMsgSumLabel.setVisibility(View.GONE);
        }

        var9.msgPreview.setEmoticonValign(0);
        var9.msgPreview.setText(Html.fromHtml(var7.content));
        var9.status.setVisibility(View.GONE);
        if("-2".equals(var7.status)) {
            var9.status.setVisibility(View.VISIBLE);
            var9.status.setImageResource(R.drawable.item_msg_state_sending);
        }

        if("-3".equals(var7.status)) {
            var9.status.setVisibility(View.VISIBLE);
            var9.status.setImageResource(R.drawable.item_msg_state_fail);
        }

        var9.timeText.setText(AppTools.howTimeAgo(this.context, Long.valueOf(var7.createTime).longValue()));
        return var2;
        /*MessageItemSource source = getItem(index).source;
        Message message = ((ChatItem)list.get(index)).message;
        ConversationListViewAdapter.ViewHolder viewHolder =itemMessageView!=null?
                (ConversationListViewAdapter.ViewHolder)itemMessageView.getTag(R.id.icon):new ConversationListViewAdapter.ViewHolder();
                ;
        if(itemMessageView == null) {
            itemMessageView = LayoutInflater.from(context).inflate(R.layout.item_message, null);
           viewHolder = new ConversationListViewAdapter.ViewHolder();
            viewHolder.icon = (WebImageView)itemMessageView.findViewById(R.id.icon);
            viewHolder.senderName = (TextView)itemMessageView.findViewById(R.id.senderName);
            viewHolder.status = (ImageView)itemMessageView.findViewById(R.id.static_icon);
            viewHolder.newMsgSumLabel = (TextView)itemMessageView.findViewById(R.id.item_newmsg_label);
            viewHolder.msgPreview = (EmoticonsTextView)itemMessageView.findViewById(R.id.msgPreview);
            viewHolder.timeText = (TextView)itemMessageView.findViewById(R.id.timeText);
            itemMessageView.setTag(R.id.icon, viewHolder);
        }


        itemMessageView.setTag(source);
        viewHolder.senderName.setText(source.getTitle());
        viewHolder.senderName.setTextColor(context.getResources().getColor(source.getTitleColor()));
        if(source.getWebIcon() == null) {
            viewHolder.icon.setImageDrawable(context.getResources().getDrawable(source.getDefaultIconRID()));
        } else {
            viewHolder.icon.load(source.getWebIcon(), source.getDefaultIconRID());
        }
        long noReadSum = MessageDBManager.getManager().countNewExceptTypesBySender(source.getId(), SystemMessageActivity.containedTypes);
        if(noReadSum > 0) {
            viewHolder.newMsgSumLabel.setVisibility(View.VISIBLE);
            viewHolder.newMsgSumLabel.setText(noReadSum > 100 ? "99+" : String.valueOf(noReadSum));
        } else {
            viewHolder.newMsgSumLabel.setVisibility(View.GONE);
        }
        viewHolder.msgPreview.setEmoticonValign(View.VISIBLE);
        viewHolder.msgPreview.setText(Html.fromHtml(message.content));
        viewHolder.status.setVisibility(View.GONE);
        if("-2".equals(message.status)) {
            viewHolder.status.setVisibility(View.VISIBLE);
            viewHolder.status.setImageResource(R.drawable.item_msg_state_sending);
        }
        if("-3".equals(message.status)) {
            viewHolder.status.setVisibility(View.VISIBLE);
            viewHolder.status.setImageResource(R.drawable.item_msg_state_fail);
        }
        viewHolder.timeText.setText(AppTools.howTimeAgo(context, Long.valueOf(message.createTime).longValue()));
        return itemMessageView;*/
    }
    
    class ViewHolder {
        WebImageView icon;
        EmoticonsTextView msgPreview;
        TextView newMsgSumLabel;
        TextView senderName;
        ImageView status;
        TextView timeText;
    }
}
