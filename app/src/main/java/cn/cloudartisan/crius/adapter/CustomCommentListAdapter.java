/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.adapter;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.bean.Comment;
import cn.cloudartisan.crius.component.EmoticonsTextView;
import cn.cloudartisan.crius.component.WebImageView;
import cn.cloudartisan.crius.util.AppTools;
import cn.cloudartisan.crius.util.FileURLBuilder;
import cn.cloudartisan.crius.util.PublishTimeAscComparator;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class CustomCommentListAdapter extends BaseAdapter {
    protected Context context;
    protected List<Comment> list=new ArrayList<>();
    
    public CustomCommentListAdapter(Context c, List<Comment> list) {
        context = c;
        if(list == null) {
            list = new ArrayList<>();
        } else {
            this.list = list;
        }
        Collections.sort(list, new PublishTimeAscComparator());
    }
    
    public int getCount() {
        return list.size();
    }
    
    public Comment getItem(int position) {
        return list.get(position);
    }
    
    public long getItemId(int position) {
        return 0;
    }
    
    public View getView(int index, View friendItemView, ViewGroup parent) {
        Comment comment = getItem(index);
        JSONObject json = JSON.parseObject(comment.content);
        CustomCommentListAdapter.ViewHolder viewHolder = friendItemView==null?
                new CustomCommentListAdapter.ViewHolder():
                (CustomCommentListAdapter.ViewHolder) friendItemView.getTag();
        if(friendItemView == null) {
            friendItemView = LayoutInflater.from(context).inflate(R.layout.item_circle_detailed_comment, null);

            viewHolder.name = (TextView)friendItemView.findViewById(R.id.name);
            viewHolder.reply = (TextView)friendItemView.findViewById(R.id.reply);
            viewHolder.replyName = (TextView)friendItemView.findViewById(R.id.replyName);
            viewHolder.icon = (WebImageView)friendItemView.findViewById(R.id.icon);
            viewHolder.content = (EmoticonsTextView)friendItemView.findViewById(R.id.content);
            viewHolder.time = (TextView)friendItemView.findViewById(R.id.time);
            friendItemView.setTag(viewHolder);
        }
        viewHolder.icon.load(FileURLBuilder.getUserIconUrl(comment.account), R.drawable.icon_head_default);
        viewHolder.name.setText(json.getString("name"));
        viewHolder.content.setEmoticonValign(0);
        viewHolder.content.setText(json.getString("content"));
        viewHolder.time.setText(AppTools.howTimeAgo(context, Long.valueOf(comment.timestamp)));
        if("1".equals(comment.type)) {
            viewHolder.reply.setVisibility(View.VISIBLE);
            viewHolder.replyName.setVisibility(View.VISIBLE);
            viewHolder.replyName.setText(json.getString("replyName"));
            return friendItemView;
        }
        viewHolder.reply.setVisibility(View.GONE);
        viewHolder.replyName.setVisibility(View.GONE);
        return friendItemView;
    }
    
    class ViewHolder {
        EmoticonsTextView content;
        WebImageView icon;
        TextView name;
        TextView reply;
        TextView replyName;
        TextView time;
    }
}
