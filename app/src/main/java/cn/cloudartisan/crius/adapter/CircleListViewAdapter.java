/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.adapter;

import android.content.Intent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.alibaba.fastjson.TypeReference;
import com.alibaba.fastjson.parser.Feature;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.Global;
import cn.cloudartisan.crius.bean.Article;
import cn.cloudartisan.crius.bean.Comment;
import cn.cloudartisan.crius.bean.SNSImage;
import cn.cloudartisan.crius.bean.User;
import cn.cloudartisan.crius.component.CommentListView;
import cn.cloudartisan.crius.component.SNSImageView;
import cn.cloudartisan.crius.component.WebImageView;
import cn.cloudartisan.crius.ui.chat.MMWebViewActivity;
import cn.cloudartisan.crius.ui.trend.ArticleDetailedActivity;
import cn.cloudartisan.crius.ui.trend.SNSCircleListActivity;
import cn.cloudartisan.crius.util.AppTools;
import cn.cloudartisan.crius.util.FileURLBuilder;
import cn.cloudartisan.crius.util.StringUtils;

import java.util.ArrayList;
import java.util.List;

public class CircleListViewAdapter extends BaseAdapter {
    CircleListViewAdapter.OnCommentClickListener commentClickListener;
    protected SNSCircleListActivity context;
    protected List<Article> list=new ArrayList<>();
    User self;
    
    public CircleListViewAdapter(SNSCircleListActivity c, List<Article> list) {
        context = c;
        this.list = list;
        self = Global.getCurrentUser();
    }
    
    public int getCount() {
        return list.size();
    }
    
    public Article getItem(int position) {
        return list.get(position);
    }
    
    public void setCommentClickListener(CircleListViewAdapter.OnCommentClickListener commentClickListener) {
        this.commentClickListener = commentClickListener;
    }
    
    public long getItemId(int position) {
        return 0;
    }
    
    public View getView(final int index, View itemView, ViewGroup parent) {
        final Article var6 = this.getItem(index);
        final CircleListViewAdapter.ViewHolder var9;
        if(itemView == null) {
            itemView = LayoutInflater.from(this.context).inflate(R.layout.sns_article_item,null);
            var9 = new CircleListViewAdapter.ViewHolder();
            var9.name = (TextView)itemView.findViewById(R.id.name);
            var9.device = (TextView)itemView.findViewById(R.id.device);
            var9.icon = (WebImageView)itemView.findViewById(R.id.icon);
            var9.time = (TextView)itemView.findViewById(R.id.time);
            var9.text = (TextView)itemView.findViewById(R.id.text);
            var9.linkTitle = (TextView)itemView.findViewById(R.id.linkTitle);
            var9.linkPanel = itemView.findViewById(R.id.linkPanel);
            var9.commentButton = itemView.findViewById(R.id.commentButton);
            var9.commentListView = (CommentListView)itemView.findViewById(R.id.commentListView);
            var9.singleImageView = (SNSImageView)itemView.findViewById(R.id.singleImageView);
            var9.rootImageViewPanel = (LinearLayout)itemView.findViewById(R.id.rootImageViewPanel);
            itemView.setTag(var9);
        } else {
            var9 = (CircleListViewAdapter.ViewHolder)itemView.getTag();
        }

        var9.commentListView.setTag(var6.gid);
        var9.icon.setTag(var6.account);
        var9.icon.load(FileURLBuilder.getUserIconUrl(var6.account), R.drawable.icon_head_default);
        var9.icon.setOnClickListener(this.context);
        final JSONObject var7 = JSON.parseObject(var6.content);
        if(StringUtils.isNotEmpty(var7.getString("content"))) {
            var9.text.setVisibility(View.VISIBLE);
            var9.text.setText(var7.getString("content"));
        } else {
            var9.text.setVisibility(View.GONE);
        }

        if(StringUtils.isNotEmpty(var7.getString("device"))) {
            var9.device.setVisibility(View.VISIBLE);
            var9.device.setText(var7.getString("device"));
        } else {
            var9.device.setVisibility(View.GONE);
        }

        var9.name.getPaint().setFakeBoldText(true);
        var9.name.setText(var7.getString("name"));
        var9.time.setText(AppTools.howTimeAgo(this.context, Long.valueOf(var6.timestamp).longValue()));
        if(!StringUtils.isEmpty(var6.thumbnail)) {
            List var8 = (List)JSON.parseObject(var6.thumbnail, (new TypeReference() {
            }).getType(), new Feature[0]);
            if(var8.size() == 1) {
                var9.singleImageView.setVisibility(View.VISIBLE);
                var9.singleImageView.display(var6, (SNSImage)var8.get(0), ((SNSImage)var8.get(0)).ow, ((SNSImage)var8.get(0)).oh);
                var9.rootImageViewPanel.setVisibility(View.GONE);
            } else {
                var9.singleImageView.setVisibility(View.GONE);
                var9.rootImageViewPanel.setVisibility(View.VISIBLE);

                int var4;
                int var5;
                for(var4 = 0; var4 < 3; ++var4) {
                    var9.rootImageViewPanel.getChildAt(var4).setVisibility(View.GONE);

                    for(var5 = var4 * 3; var5 < (var4 + 1) * 3; ++var5) {
                        ((LinearLayout)var9.rootImageViewPanel.getChildAt(var4)).getChildAt(var5 - var4 * 3).setVisibility(View.GONE);
                    }
                }

                for(var4 = 0; var4 < (var8.size() - 1) / 3 + 1; ++var4) {
                    var9.rootImageViewPanel.getChildAt(var4).setVisibility(View.VISIBLE);

                    for(var5 = var4 * 3; var5 < var8.size() && var5 < (var4 + 1) * 3; ++var5) {
                        ((LinearLayout)var9.rootImageViewPanel.getChildAt(var4)).getChildAt(var5 - var4 * 3).setVisibility(View.VISIBLE);
                        ((SNSImageView)((LinearLayout)var9.rootImageViewPanel.getChildAt(var4)).getChildAt(var5 - var4 * 3)).display(var6, (SNSImage)var8.get(var5));
                    }
                }
            }
        } else {
            var9.rootImageViewPanel.setVisibility(View.GONE);
            var9.singleImageView.setVisibility(View.GONE);
        }

        if(var6.type.equals("1")) {
            final JSONObject var10 = JSON.parseObject(var6.content).getJSONObject("link");
            var9.linkPanel.setVisibility(View.VISIBLE);
            var9.linkPanel.setOnClickListener(new View.OnClickListener() {
                public void onClick(View var1) {
                    Intent var2 = new Intent(CircleListViewAdapter.this.context, MMWebViewActivity.class);
                    var2.putExtra("url", var10.getString("link"));
                    CircleListViewAdapter.this.context.startActivity(var2);
                }
            });
            var9.linkTitle.setText(var10.getString("title"));
        } else {
            var9.linkPanel.setVisibility(View.GONE);
        }

        var9.commentButton.setOnClickListener(new View.OnClickListener() {
            public void onClick(View var1x) {
                CircleListViewAdapter.this.commentClickListener.onComment(index + 1, var9.commentListView, var6.gid, (String)null, var6.account, var6.account, var7.getString("name"), "0");
            }
        });
        var9.commentListView.setCommentList(var6.getCommentList());
        var9.commentListView.setOnItemClickListener(new CommentListView.OnCommentItemClickListener() {
            public void onCommentClick(CommentListView var1x, Comment var2) {
                String var3 = JSON.parseObject(var2.content).getString("name");
                CircleListViewAdapter.this.commentClickListener.onComment(index + 1, var1x, var6.gid, var2.gid, var6.account, var2.account, var3, "1");
            }
        });
        itemView.setOnClickListener(new View.OnClickListener() {
            public void onClick(View var1) {
                Intent var2 = new Intent(CircleListViewAdapter.this.context, ArticleDetailedActivity.class);
                var2.putExtra("article", var6);
                CircleListViewAdapter.this.context.startActivity(var2);
            }
        });
        return itemView;
       /* final Article target = getItem(index);
        final CircleListViewAdapter.ViewHolder viewHolder = itemView==null?new CircleListViewAdapter.ViewHolder(): (CircleListViewAdapter.ViewHolder)itemView.getTag();;
        if(itemView == null) {
            itemView = LayoutInflater.from(context).inflate(R.layout.sns_article_item, null);

            viewHolder.name = (TextView)itemView.findViewById(R.id.name);
            viewHolder.device = (TextView)itemView.findViewById(R.id.device);
            viewHolder.icon = (WebImageView)itemView.findViewById(R.id.icon);
            viewHolder.time = (TextView)itemView.findViewById(R.id.time);
            viewHolder.text = (TextView)itemView.findViewById(R.id.text);
            viewHolder.linkTitle = (TextView)itemView.findViewById(R.id.linkTitle);
            viewHolder.linkPanel = itemView.findViewById(R.id.linkPanel);
            viewHolder.commentButton = itemView.findViewById(R.id.commentButton);
            viewHolder.commentListView = (CommentListView)itemView.findViewById(R.id.commentListView);
            viewHolder.singleImageView = (SNSImageView)itemView.findViewById(R.id.singleImageView);
            viewHolder.rootImageViewPanel = (LinearLayout)itemView.findViewById(R.id.rootImageViewPanel);
            itemView.setTag(viewHolder);
        }
        viewHolder.commentListView.setTag(target.gid);
        viewHolder.icon.setTag(target.account);
        viewHolder.icon.load(FileURLBuilder.getUserIconUrl(target.account), R.drawable.icon_head_default);
        viewHolder.icon.setOnClickListener(context);
        final JSONObject json = JSON.parseObject(target.content);
        if(StringUtils.isNotEmpty(json.getString("content"))) {
            viewHolder.text.setVisibility(View.VISIBLE);
            viewHolder.text.setText(json.getString("content"));
        } else {
            viewHolder.text.setVisibility(View.GONE);
        }
        if(StringUtils.isNotEmpty(json.getString("device"))) {
            viewHolder.device.setVisibility(View.VISIBLE);
            viewHolder.device.setText(json.getString("device"));
        } else {
            viewHolder.device.setVisibility(View.GONE);
        }
        viewHolder.name.getPaint().setFakeBoldText(true);
        viewHolder.name.setText(json.getString("name"));
        viewHolder.time.setText(AppTools.howTimeAgo(context, Long.valueOf(target.timestamp)));
        if(!StringUtils.isEmpty(target.thumbnail)) {
           List<SNSImage> snsImageList = JSON.parseObject(target.thumbnail, new TypeReference<CircleListViewAdapter> (){}.getType(), new Feature[0x0]);

            if(snsImageList.size() == 1) {
                viewHolder.singleImageView.setVisibility(View.VISIBLE);
                viewHolder.singleImageView.display(target, snsImageList.get(0), snsImageList.get(0).ow,snsImageList.get(0).oh);
                viewHolder.rootImageViewPanel.setVisibility(View.GONE);
            } else {
                viewHolder.singleImageView.setVisibility(View.GONE);
                viewHolder.rootImageViewPanel.setVisibility(View.VISIBLE);
               *//* for(int L = 0; L >= 3; L ++) {
                    viewHolder.rootImageViewPanel.getChildAt(L).setVisibility(View.GONE);
                    ( (LinearLayout)(viewHolder.rootImageViewPanel.getChildAt(L))).getChildAt((i - (L * 3))).setVisibility(View.GONE);

                }
*//*

                  for(int L = 0; L < (((snsImageList.size() - 1) / 3) + 1); L ++) {
                    viewHolder.rootImageViewPanel.getChildAt(L).setVisibility(View.VISIBLE);
                    for(int i = (L * 3); i < snsImageList.size(); i = i + 1) {
                        if (i >= ((L + 1) * 3)) {
                            ((LinearLayout) viewHolder.rootImageViewPanel.getChildAt(L)).getChildAt((i - (L * 3))).setVisibility(View.VISIBLE);
                            ((SNSImageView) ((LinearLayout) viewHolder.rootImageViewPanel.getChildAt(L)).getChildAt((i - (L * 0x3)))).display(target,snsImageList.get(i));
                        } else {
                            viewHolder.rootImageViewPanel.setVisibility(View.GONE);
                            viewHolder.singleImageView.setVisibility(View.GONE);
                        }
                    }
                }
            }
        }
       if (target.type.equals("1")) {
           final JSONObject link = JSON.parseObject(target.content).getJSONObject("link");
            viewHolder.linkPanel.setVisibility(View.VISIBLE);
            viewHolder.linkPanel.setOnClickListener(new View.OnClickListener() {
                public void onClick(View view) {
                    Intent intent = new Intent(context, MMWebViewActivity.class);
                    intent.putExtra("url", link.getString("link"));
                    context.startActivity(intent);
                }
            });
            viewHolder.linkTitle.setText(link.getString("title"));
        } else {
            viewHolder.linkPanel.setVisibility(View.GONE);
        }
        viewHolder.commentButton.setOnClickListener(new View.OnClickListener() {
            public void onClick(View view) {
                commentClickListener.onComment((index + 1), viewHolder.commentListView, target.gid, null, target.account, target.account, json.getString("name"), "0");
            }
        });
        viewHolder.commentListView.setCommentList(target.getCommentList());
        viewHolder.commentListView.setOnItemClickListener(new CommentListView.OnCommentItemClickListener() {
            

            
            public void onCommentClick(CommentListView commentListView, Comment comment) {
                String name = JSON.parseObject(comment.content).getString("name");
                commentClickListener.onComment(index + 1, commentListView,
                        target.gid, comment.gid,
                        target.account,
                        comment.account, name, "1");
            }
        });
        itemView.setOnClickListener(new View.OnClickListener(){

            public void onClick(View view) {
                Intent intent = new Intent(context, ArticleDetailedActivity.class);
                intent.putExtra("article", target);
                context.startActivity(intent);
            }
        });
        return itemView;*/
    }

    public  interface OnCommentClickListener
    {
         void onComment(int paramInt, CommentListView paramCommentListView, String paramString1, String paramString2, String paramString3, String paramString4, String paramString5, String paramString6);
    }
    class ViewHolder {
        View commentButton;
        CommentListView commentListView;
        TextView device;
        WebImageView icon;
        View linkPanel;
        TextView linkTitle;
        TextView name;
        LinearLayout rootImageViewPanel;
        SNSImageView singleImageView;
        TextView text;
        TextView time;
    }
}
