/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.adapter;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;
import com.alibaba.fastjson.JSON;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.Global;
import cn.cloudartisan.crius.bean.Bottle;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.bean.User;
import cn.cloudartisan.crius.component.EmoticonsTextView;
import cn.cloudartisan.crius.component.WebImageView;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.util.AppTools;
import cn.cloudartisan.crius.util.FileURLBuilder;
import cn.cloudartisan.crius.util.StringUtils;

import java.util.List;

public class BottleListAdapter extends BaseAdapter {
    protected Context context;
    protected List<Bottle> list;
    User user;
    
    public BottleListAdapter(Context c, List<Bottle> list) {
        context = c;
        this.list = list;
        user = Global.getCurrentUser();
    }
    
    public int getCount() {
        return list.size();
    }
    
    public Bottle getItem(int position) {
        return (Bottle)list.get(position);
    }
    
    public long getItemId(int position) {
         return 0L;
    }
    
    public View getView(int index, View itemMessageView, ViewGroup parent) {
        BottleListAdapter.ViewHolder viewHolder = null;
        if(itemMessageView == null) {
            itemMessageView = LayoutInflater.from(context).inflate(R.layout.item_message, null);
         viewHolder = new BottleListAdapter.ViewHolder();
            viewHolder.senderName = (TextView)itemMessageView.findViewById(R.id.senderName);
            viewHolder.status = (ImageView)itemMessageView.findViewById(R.id.static_icon);
            viewHolder.newMsgSumLabel = (TextView)itemMessageView.findViewById(R.id.item_newmsg_label);
            viewHolder.msgPreview = (EmoticonsTextView)itemMessageView.findViewById(R.id.msgPreview);
            viewHolder.timeText = (TextView)itemMessageView.findViewById(R.id.timeText);
            itemMessageView.setTag(viewHolder);
        } else {
            viewHolder =(BottleListAdapter.ViewHolder) itemMessageView.getTag();
        }
        Message message = MessageDBManager.getManager().queryLastMessage(getItem(index).getId(), new String[] {"700"});
        if(user.getAccount().equals(getItem(index).sender)) {
            viewHolder.icon.load(FileURLBuilder.getUserIconUrl(getItem(index).receiver), R.drawable.icon_head_default);
        } else {
            viewHolder.icon.load(FileURLBuilder.getUserIconUrl(getItem(index).sender), R.drawable.icon_head_default);
        }
        viewHolder.senderName.setText(getItem(index).region == null ? "未知地区" : getItem(index).region);
        viewHolder.msgPreview.setEmoticonValign(0);
        viewHolder.msgPreview.setText(getPreviewText(message));
        viewHolder.timeText.setText(AppTools.howTimeAgo(context, Long.valueOf(getItem(index).timestamp).longValue()));
        long noReadSum = MessageDBManager.getManager().countNewBySender(getItem(index).getId());
        if(noReadSum > 0) {
            viewHolder.newMsgSumLabel.setVisibility(View.VISIBLE);
            viewHolder.newMsgSumLabel.setText(noReadSum > 100 ? "99+" : String.valueOf(noReadSum));
        } else {
            viewHolder.newMsgSumLabel.setVisibility(View.GONE);
        }
        viewHolder.status.setVisibility(View.GONE);
        if((message != null) && ("-2".equals(message.status))) {
            viewHolder.status.setVisibility(View.VISIBLE);
            viewHolder.status.setImageResource(R.drawable.item_msg_state_sending);
        }
        if((message != null) && ("-3".equals(message.status))) {
            viewHolder.status.setVisibility(View.VISIBLE);
            viewHolder.status.setImageResource(R.drawable.item_msg_state_fail);
        }
        return itemMessageView;
    }
    
    public static String getPreviewText(Message message) {
        if ((message != null) && ("1".equals(message.fileType))) {
            return "[图片]";
        }
        if ((message != null) && ("3".equals(message.fileType))) {
            return "[文件]";
        }
        if ((message != null) && ("2".equals(message.fileType))) {
            return "[语音]";
        }
        if ((message != null) && ("4".equals(message.fileType))) {
            return "[地图]";
        }

        if((message != null) && (StringUtils.isEmpty(message.fileType)) || ("0".equals(message.fileType))) {
            try {
                String content = JSON.parseObject(message.content).getString("content");
                if(message.sender.equals(Global.getCurrentUser().getAccount())) {
                    return "我"+message.content;
                }
                return content;
            } catch(Exception localException1) {
                return "";
            }

        }
return "";
    }
    
    class ViewHolder {
        WebImageView icon;
        EmoticonsTextView msgPreview;
        TextView newMsgSumLabel;
        TextView senderName;
        ImageView status;
        TextView timeText;
    }
}
