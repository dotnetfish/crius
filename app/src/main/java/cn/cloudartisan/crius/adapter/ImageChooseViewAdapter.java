/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.adapter;

import android.app.Activity;
import android.content.Context;
import android.util.DisplayMetrics;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.RelativeLayout;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.bean.AlbumItem;
import cn.cloudartisan.crius.component.WebImageView;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

public class ImageChooseViewAdapter extends BaseAdapter implements CompoundButton.OnCheckedChangeListener {
    protected Context context;
    protected List<AlbumItem> list =new ArrayList<>();
    ImageChooseViewAdapter.OnChechedListener onChechedListener;
    protected ArrayList<File> selectedList = new ArrayList();
    int size = 0;
    int max = 1;
    public  interface OnChechedListener
    {
        void onChecked(CompoundButton paramCompoundButton, File paramFile, boolean paramBoolean);
    }
    public ImageChooseViewAdapter(Context c, List<AlbumItem> list, int max) {
        this.max = max;
        context = c;
        this.list = list;
        DisplayMetrics mDisplayMetrics = new DisplayMetrics();
        ( (Activity)context).getWindowManager().getDefaultDisplay().getMetrics(mDisplayMetrics);
        int w = mDisplayMetrics.widthPixels;
        size = ((int)(((float)w - (mDisplayMetrics.density * 2.0f)) + 0.5f) / 3);
    }
    
    public int getCount() {
        return list.size();
    }
    
    public AlbumItem getItem(int position) {
        return list.get(position);
    }
    
    public long getItemId(int position) {
        return 0x0;
    }
    
    public View getView(int position, View convertView, ViewGroup parent) {
        AlbumItem item = getItem(position);
        ImageChooseViewAdapter.ViewHolder holder = new ImageChooseViewAdapter.ViewHolder();
        if(convertView == null) {
            convertView = LayoutInflater.from(context).inflate(R.layout.item_image_choose, null);

            holder.image = (WebImageView)convertView.findViewById(R.id.image);
            holder.box = (CheckBox)convertView.findViewById(R.id.checkbox);
            RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(size, size);
            holder.image.setLayoutParams(params);
            convertView.setTag(holder);
        } else {
            holder = (ImageChooseViewAdapter.ViewHolder)convertView.getTag();
        }
        holder.box.setTag(item.file);
        holder.box.setOnCheckedChangeListener(null);
        if(selectedList.contains(item.file)) {
            holder.box.setChecked(true);
        } else {
            holder.box.setChecked(false);
        }
        if(max == 1) {
            holder.box.setVisibility(View.GONE);
        } else {
            holder.box.setOnCheckedChangeListener(this);
            holder.image.setPopuShowAble();
        }
        if(item.thumbnail != null) {
            holder.image.display("file://"+item.thumbnail, item.file.getAbsolutePath());
            return convertView;
        }
        holder.image.display("file://"+item.file.getAbsolutePath(), item.file.getAbsolutePath());
        return convertView;
    }
    
    class ViewHolder {
        CheckBox box;
        WebImageView image;
    }
    
    public void onCheckedChanged(CompoundButton compoundbutton, boolean isChecked) {
        if(isChecked) {
            selectedList.add((File)compoundbutton.getTag());
        } else {
            selectedList.remove(compoundbutton.getTag());
        }
        onChechedListener.onChecked(compoundbutton, (File)compoundbutton.getTag(), isChecked);
    }
    
    public void setOnChechedListener(ImageChooseViewAdapter.OnChechedListener onChechedListener) {
        this.onChechedListener = onChechedListener;
    }
    
    public ArrayList getSelectedFiles() {
        return selectedList;
    }
}
