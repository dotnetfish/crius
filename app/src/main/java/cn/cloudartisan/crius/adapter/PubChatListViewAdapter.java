/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.adapter;

import android.content.Context;
import android.content.Intent;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.Global;
import cn.cloudartisan.crius.app.CriusApplication;
import cn.cloudartisan.crius.bean.ChatItem;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.bean.MessageItemSource;
import cn.cloudartisan.crius.bean.User;
import cn.cloudartisan.crius.component.ChatListView;
import cn.cloudartisan.crius.component.PubFromMessageView;
import cn.cloudartisan.crius.component.PubToMessageTextView;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.util.AppTools;

import java.util.ArrayList;
import java.util.List;

public class PubChatListViewAdapter extends BaseAdapter implements ChatListView.OnMessageDeleteListenter {
    private static final int VIEW_TAG = R.id.logo;
    protected Context context;
    long lastTime;
    protected List<Message> list =new ArrayList<>();
    MessageItemSource others;
    User self;
    
    public PubChatListViewAdapter(Context context, List<Message> list, MessageItemSource friend) {
        this.context = context;
        self = Global.getCurrentUser();
        others = friend;
        this.list = list;
    }
    
    public int getCount() {
        return list.size();
    }
    
    public Message getItem(int position) {
        return list.get(position);
    }
    
    public long getItemId(int position) {
        return (list.get(position)).gid.hashCode();
    }
    
    public int getItemViewType(int position) {
        Message msg = getItem(position);
        String type = msg.fileType;
        boolean isSelf = self.getAccount().equals(msg.sender);
        if(isSelf) {
            return 0;
        }
        if((!isSelf) && ("0".equals(type))) {
            return 1;
        }
        if((!isSelf) && ("5".equals(type))) {
            return 2;
        }
        if((!isSelf) && ("6".equals(type))) {
            return 3;
        }
        return 0;
    }
    
    public int getViewTypeCount() {
        return 4;
    }
    
    public View getView(int position, View chatItemView, ViewGroup parent) {
        Message message = getItem(position);
        PubChatListViewAdapter.ViewHolder viewHolder = null;
        boolean isSelf = self.getAccount().equals(message.sender);
        if(chatItemView == null) {
            viewHolder = new PubChatListViewAdapter.ViewHolder();
            if((isSelf) && ("0".equals(message.fileType))) {
               // LayoutInflater.from(context) = chatItemView;
                viewHolder.toTextMessageView = (PubToMessageTextView)LayoutInflater.from(context).inflate(R.layout.layout_pubchat_to_text,null);
            }
            if((!isSelf) && ("0".equals(message.fileType))) {
                //LayoutInflater.from(context) = chatItemView;
                viewHolder.replyMessageView = (PubFromMessageView)LayoutInflater.from(context).inflate(R.layout.layout_pubchat_reply_text,null);
            }
            if((!isSelf) && ("5".equals(message.fileType))) {
              // LayoutInflater.from(context) = chatItemView;
                viewHolder.replyMessageView = (PubFromMessageView)LayoutInflater.from(context).inflate(R.layout.layout_pubchat_reply_link,null);
            }
            if((!isSelf) && ("6".equals(message.fileType))) {
               // LayoutInflater.from(context) = chatItemView;
                viewHolder.replyMessageView = (PubFromMessageView)(LayoutInflater.from(context).inflate(R.layout.layout_pubchat_reply_linkpanel,null));
            }
            viewHolder.datetime = (TextView)chatItemView.findViewById(R.id.datetime);
            chatItemView.setTag(VIEW_TAG, viewHolder);
        } else {
            viewHolder = ( PubChatListViewAdapter.ViewHolder)chatItemView.getTag(VIEW_TAG);
        }
        if(isSelf) {
            viewHolder.toTextMessageView.displayMessage(message, self, others);
            viewHolder.toTextMessageView.setOnMessageDeleteListenter(this);
        } else {
            viewHolder.replyMessageView.displayMessage(message, self, others);
            viewHolder.replyMessageView.setOnMessageDeleteListenter(this);
        }
        viewHolder.datetime.setText(AppTools.howTimeAgo(context, Long.parseLong(message.createTime)));
        return chatItemView;
    }
    
    public List getList() {
        return list;
    }
    
    public void setList(List<Message> list) {
        this.list = list;
    }
    
    class ViewHolder {
        TextView datetime;
        PubFromMessageView replyMessageView;
        PubToMessageTextView toTextMessageView;
    }
    
    public void onDelete(Message msg) {
        MessageDBManager.getManager().deleteById(msg.gid);
        list.remove(msg);
        notifyDataSetChanged();
        Intent intent = new Intent("com.farsunset.cim.DELETE_APPEND");
        intent.putExtra(ChatItem.NAME, new ChatItem(msg, others));
        CriusApplication.getInstance().sendBroadcast(intent);
    }
}
