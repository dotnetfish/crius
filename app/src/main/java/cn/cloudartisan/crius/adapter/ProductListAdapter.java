/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.adapter;

import android.content.Context;
import android.graphics.Paint;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.alibaba.fastjson.JSON;

import java.util.List;

import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.Global;
import cn.cloudartisan.crius.app.URLConstant;
import cn.cloudartisan.crius.bean.Bottle;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.bean.NewsInfo;
import cn.cloudartisan.crius.bean.ProductInfo;
import cn.cloudartisan.crius.bean.User;
import cn.cloudartisan.crius.component.EmoticonsTextView;
import cn.cloudartisan.crius.component.WebImageView;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.util.AppTools;
import cn.cloudartisan.crius.util.FileURLBuilder;
import cn.cloudartisan.crius.util.StringUtils;

public class ProductListAdapter extends BaseAdapter {
    protected Context context;
    protected List<ProductInfo> list;
    User user;

    public ProductListAdapter(Context c, List<ProductInfo> list) {
        context = c;
        this.list = list;
        user = Global.getCurrentUser();
    }

    public int getCount() {
        return list.size();
    }

    public ProductInfo getItem(int position) {
        return (ProductInfo)list.get(position);
    }

    public long getItemId(int position) {
         return 0L;
    }

    public View getView(int index, View itemMessageView, ViewGroup parent) {
        ProductListAdapter.ViewHolder viewHolder = null;
        if(itemMessageView == null) {
            itemMessageView = LayoutInflater.from(context).inflate(R.layout.item_product, null);
         viewHolder = new ProductListAdapter.ViewHolder();
            //viewHolder.p_num = (TextView)itemMessageView.findViewById(R.id.p_num);
           // viewHolder.status = (ImageView)itemMessageView.findViewById(R.id.ic);
            viewHolder.p_price = (TextView)itemMessageView.findViewById(R.id.p_price);
            viewHolder.p_price.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);
            viewHolder.p_s_price = (TextView) itemMessageView.findViewById(R.id.p_s_price);
            viewHolder.txt_desc = (TextView)itemMessageView.findViewById(R.id.txt_desc);
            viewHolder.p_img=(WebImageView)itemMessageView.findViewById(R.id.p_img);
            viewHolder.title=(TextView)itemMessageView.findViewById(R.id.p_name);
            //viewHolder.p_sale_count=(TextView)itemMessageView.findViewById(R.id.p_s_count);
           // viewHolder.timeText=(TextView)itemMessageView.findViewById(R.id.timeText) ;

            itemMessageView.setTag(viewHolder);
        } else {
            viewHolder =(ProductListAdapter.ViewHolder) itemMessageView.getTag();
        }
        ProductInfo item=getItem(index);

        if(getItem(index).getImgThumbs()!=null && StringUtils.isNotEmpty(getItem(index).getImgThumbs())){
            viewHolder.p_img.load(getItem(index).getImgThumbs(), R.drawable.icon_head_default);
        }

        viewHolder.title.setText(getItem(index).getTitle() == null ? "未标识商品" : getItem(index).getTitle());
            viewHolder.p_price.setText(String.valueOf(item.getMarket_price()));
        viewHolder.p_s_price.setText(String.valueOf(item.getSale_price()));
        viewHolder.txt_desc.setText(item.getBrief());

        return itemMessageView;
    }

    private String getRes(int resId,String s) {
        return context.getResources().getString(resId)+s;
    }


    
    class ViewHolder {
        WebImageView p_img;
        TextView p_price;

        TextView p_s_price;
        TextView title;

        TextView txt_desc;
    }
}
