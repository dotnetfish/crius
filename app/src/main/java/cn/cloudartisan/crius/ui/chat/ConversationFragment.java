/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.ui.chat;

import android.app.Activity;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.adapter.ConversationListViewAdapter;
import cn.cloudartisan.crius.app.Global;
import cn.cloudartisan.crius.bean.*;
import cn.cloudartisan.crius.component.WebImageView;
import cn.cloudartisan.crius.db.ConfigDBManager;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.message.parser.MessageParser;
import cn.cloudartisan.crius.message.parser.MessageParserFactory;
import cn.cloudartisan.crius.service.MessageNotifyService;
import cn.cloudartisan.crius.ui.HomeActivity;
import cn.cloudartisan.crius.ui.base.CIMMonitorFragment;
import cn.cloudartisan.crius.util.AppTools;
import cn.cloudartisan.crius.util.MessageUtil;
import cn.cloudartisan.crius.widget.CustomDialog;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class ConversationFragment extends CIMMonitorFragment implements AdapterView.OnItemClickListener, AdapterView.OnItemLongClickListener, CustomDialog.OnOperationListener {
    public static final String ACTION_APPEND_CHAT = "com.farsunset.cim.MESSAGE_APPEND";
    public static final String ACTION_CHANGE_SEND_STATUS = "com.farsunset.cim.SEND_STATUS_CHANGED";
    public static final String ACTION_DELETE_CHAT = "com.farsunset.cim.DELETE_APPEND";
    public static final String ACTION_UPDATE_ITEM = "com.farsunset.cim.UPDATE_ITEM";
    public static String[] ignoredTypes = new String[]{"2", "101", "103", "104", "106", "107"};
    protected ConversationListViewAdapter adapter;
    ConversationFragment.ChatBroadcastReceiver chatBroadcastReceiver;
    ListView conversationListView;
    CustomDialog customDialog;
    private List<ChatItem> dataList = new ArrayList();
    String[] includedMessageTypes = new String[]{"0", "1", "2", "3", "201", "101", "103", "104", "106", "107"};
    TextView newMsgLabel;
    User self;
    
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        self = Global.getCurrentUser();
        this.dataList=new ArrayList<>();
        ChatItem item=new ChatItem();
        item.message=new Message();
        item.message.content="sdfs";
        item.message.createTime="2015-09-01";
        item.message.fileType="1";
        this.dataList.add(item);
    }
    
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return inflater.inflate(R.layout.activity_conversation, container, false);
    }
    
    public void onViewCreated(View view, Bundle savedInstanceState) {
        conversationListView = (ListView)findViewById(R.id.conversationList);
        adapter = new ConversationListViewAdapter(getActivity(), dataList);
        conversationListView.setAdapter(adapter);
        conversationListView.setOnItemClickListener(this);
        conversationListView.setOnItemLongClickListener(this);
        customDialog = new CustomDialog(getActivity());
        customDialog.setOperationListener(this);
        customDialog.setTitle(getString(R.string.title_delete_message));
        customDialog.setMessage(getString(R.string.tip_delete_message));
        customDialog.setButtonsText(getString(R.string.common_cancel), getString(R.string.common_confirm));
        if(!AppTools.netWorkAvailable(getActivity())) {
            findViewById(R.id.networkWarnPanel).setVisibility(View.VISIBLE);
        }
        loadMessage();
    }
    
    public void loadMessage() {
        dataList.clear();
        dataList.addAll(MessageDBManager.getManager().getRecentMessage(self.getAccount(), includedMessageTypes));
        adapter.notifyDataSetChanged();
        if(dataList.isEmpty()) {
            findViewById(R.id.nochatbgimage).setVisibility(View.VISIBLE);
            return;
        }
        findViewById(R.id.nochatbgimage).setVisibility(View.GONE);
    }
    
    private void showNewMsgLable() {
        View tabView =( (HomeActivity)getActivity()).getConversationFragment();
        newMsgLabel = (TextView)tabView.findViewById(R.id.badge_unread_count);
        int sum = MessageDBManager.getManager().queryIncludedNewCount(includedMessageTypes);
        if(sum > 0) {
            newMsgLabel.setText(sum > 0x63 ? "99+" : String.valueOf(sum));
            newMsgLabel.setVisibility(View.VISIBLE);
            return;
        }
        newMsgLabel.setVisibility(View.GONE);
    }
    
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        MessageItemSource data =( (ChatItem)dataList.get(position)).source;
        view.findViewById(R.id.item_newmsg_label).setVisibility(View.GONE);
        if(data instanceof Group) {
            Intent intent = new Intent(getActivity(), GroupChatActivity.class);
            intent.putExtra("othersId", ((Group)data).groupId);
            intent.putExtra("othersName", ((Group)data).name);
            startActivity(intent);
        }
        if(data instanceof Friend) {
            Intent intent = new Intent(getActivity(), FriendChatActivity.class);
            intent.putExtra("othersId", ((Friend)data).account);
            intent.putExtra("othersName", ((Friend)data).name);
            startActivity(intent);
        }
        if(data instanceof PublicAccount) {
            Intent intent = new Intent(getActivity(), PubAccountChatActivity.class);
            intent.putExtra(PublicAccount.NAME, (PublicAccount)data);
            startActivity(intent);
        }
        if(data instanceof SystemMsg) {
            Intent intent = new Intent(getActivity(), SystemMessageActivity.class);
            startActivity(intent);
        }
    }
    
    public void onMessageReceived(cn.cloudartisan.crius.client.model.Message message) {
       cn.cloudartisan.crius.bean. Message msg = MessageUtil.transform(message);
        if(Arrays.asList(includedMessageTypes).contains(msg.type)) {
            if((msg.type.equals("3")) && ("1".equals(ConfigDBManager.getManager().queryValue(message.getSender())))) {
                return;
            }
            findViewById(R.id.nochatbgimage).setVisibility(View.GONE);
            appendMessage(msg);
            showNewMsgLable();
        }
    }
    
    public void onLeftClick() {
        customDialog.dismiss();
    }
    
    public void onRightClick() {
        customDialog.dismiss();
        dataList.remove(customDialog.getTag());
        adapter.notifyDataSetChanged();
        MessageItemSource source = ((ChatItem)customDialog.getTag()).source;
        String id = source.getId();
        MessageDBManager.getManager().deleteBySender(id);
        showNewMsgLable();
    }
    
    public boolean onItemLongClick(AdapterView<?> arg0, View arg1, int index, long arg3) {
        customDialog.setTag(dataList.get(index));
        customDialog.show();
        return true;
    }
    
    public void onNetworkChanged(NetworkInfo info) {
        if(info != null) {
            findViewById(R.id.networkWarnPanel).setVisibility(View.GONE);
            return;
        }
        findViewById(R.id.networkWarnPanel).setVisibility(View.VISIBLE);
    }
    
    public void appendMessage(Object var1) {
        ChatItem var2 = null;
        if(var1 instanceof Message) {
            Message var3 = (Message)var1;
            var2 = new ChatItem();
            var2.message = var3;
            var2.source = MessageParserFactory.getFactory().getMessageParser(var3.type).getMessageItemSource(var3);
        }

        if(var1 instanceof ChatItem) {
            var2 = (ChatItem)var1;
        }

        MessageParser var4 = MessageParserFactory.getFactory().getMessageParser(var2.message.type);
        if(var2.source != null && var4 != null && Arrays.asList(this.includedMessageTypes).contains(var2.message.type)) {
            var2.message.content = var4.getMessagePreview(var2.message);
            this.dataList.remove(var2);
            this.dataList.add(0, var2);
            this.adapter.notifyDataSetChanged();
            this.findViewById(R.id.nochatbgimage).setVisibility(View.GONE);
        }
    }
    
    public void onAttach(Activity activity) {
        super.onAttach(activity);
        chatBroadcastReceiver = new ConversationFragment.ChatBroadcastReceiver();
        getActivity().registerReceiver(chatBroadcastReceiver, chatBroadcastReceiver.getIntentFilter());
    }
    
    public void onDetach() {
        super.onDetach();
        getActivity().unregisterReceiver(chatBroadcastReceiver);
    }
    
    public void onResume() {
        super.onResume();
        showNewMsgLable();
        getActivity().stopService(new Intent(getActivity(), MessageNotifyService.class));
    }
    public class ChatBroadcastReceiver
            extends BroadcastReceiver
    {
        public ChatBroadcastReceiver() {}

        public IntentFilter getIntentFilter()
        {
            IntentFilter localIntentFilter = new IntentFilter();
            localIntentFilter.addAction("com.farsunset.cim.MESSAGE_APPEND");
            localIntentFilter.addAction("com.farsunset.cim.SEND_STATUS_CHANGED");
            localIntentFilter.addAction("com.farsunset.cim.DELETE_APPEND");
            localIntentFilter.addAction("com.farsunset.cim.UPDATE_ITEM");
            return localIntentFilter;
        }

        public void onReceive(Context paramContext, Intent paramIntent)
        {
            if ("com.farsunset.cim.MESSAGE_APPEND".equals(paramIntent.getAction())) {
                ConversationFragment.this.appendMessage(paramIntent.getSerializableExtra("data"));
            }
            ChatItem localObject2;
            if ("com.farsunset.cim.DELETE_APPEND".equals(paramIntent.getAction()))
            {
                localObject2 = (ChatItem)paramIntent.getSerializableExtra(ChatItem.NAME);
                if (localObject2.message == null)
                {
                    ConversationFragment.this.dataList.remove(localObject2);
                    ConversationFragment.this.adapter.notifyDataSetChanged();
                    return;
                }
                Message msg = MessageDBManager.getManager().queryLastMessage(localObject2.source.getId(), (localObject2).source.getMessageType());
                if (msg != null) {
                    Object localObject1 = MessageParserFactory.getFactory().getMessageParser(msg.type);
                   View view  = ConversationFragment.this.conversationListView.findViewWithTag(((ChatItem)localObject2).source);
                    if ((view != null) && (localObject1 != null)) {
                        ((TextView)(view.findViewById(R.id.msgPreview))).setText(((MessageParser)localObject1).getMessagePreview(msg));
                    }
                }else {
                    ConversationFragment.this.dataList.remove(localObject2);
                    ConversationFragment.this.adapter.notifyDataSetChanged();
                }
            }

                if ("com.farsunset.cim.SEND_STATUS_CHANGED".equals(paramIntent.getAction()))
                {
                    Message msg = (cn.cloudartisan.crius.bean.Message)paramIntent.getSerializableExtra(cn.cloudartisan.crius.bean.Message.NAME);
                    MessageParser   parser = MessageParserFactory.getFactory().getMessageParser(msg.type);
                    if (parser != null)
                    {
                        View view = ConversationFragment.this.conversationListView.findViewWithTag((parser).getMessageItemSource(msg));
                        if (view != null)
                        {
                            (view).findViewById(R.id.static_icon).setVisibility(View.GONE);
                            if ("-2".equals(msg.status))
                            {
                                (view).findViewById(R.id.static_icon).setVisibility(View.VISIBLE);
                                ((ImageView)view.findViewById(R.id.static_icon)).setImageResource(R.drawable.item_msg_state_sending);
                            }
                            if ("-3".equals(msg.status))
                            {
                                (view).findViewById(R.id.static_icon).setVisibility(View.VISIBLE);
                                ((ImageView)(view).findViewById(R.id.static_icon)).setImageResource(R.drawable.item_msg_state_fail);
                            }
                        }
                    }
                }
                if ("com.farsunset.cim.UPDATE_ITEM".equals(paramIntent.getAction())) {
                    Friend friend = (Friend)paramIntent.getSerializableExtra(MessageItemSource.class.getName());
                    View view = ConversationFragment.this.conversationListView.findViewWithTag(friend);
                    if (view != null) {
                        if (friend.getName() != null) {
                            ((TextView)view.findViewById(R.id.senderName)).setText(friend.getName());
                        }
                        ((WebImageView)view.findViewById(R.id.itemMsgHead)).load(friend.getWebIcon());
                    }
                }
        }
    }
}
