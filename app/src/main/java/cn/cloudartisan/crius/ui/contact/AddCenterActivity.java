/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.ui.contact;

import android.content.Intent;
import android.graphics.Color;
import android.text.Editable;
import android.text.SpannableStringBuilder;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.text.style.ForegroundColorSpan;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import com.alibaba.fastjson.TypeReference;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.URLConstant;
import cn.cloudartisan.crius.bean.Friend;
import cn.cloudartisan.crius.bean.Group;
import cn.cloudartisan.crius.bean.Page;
import cn.cloudartisan.crius.bean.PublicAccount;
import cn.cloudartisan.crius.network.HttpAPIRequester;
import cn.cloudartisan.crius.network.HttpAPIResponser;
import cn.cloudartisan.crius.ui.base.BaseActivity;

import java.util.List;
import java.util.Map;

public class AddCenterActivity extends BaseActivity implements HttpAPIResponser, View.OnClickListener, TextWatcher {
    EditText keyword;
    TextView label_group;
    TextView label_pubaccount;
    TextView label_user;
    HttpAPIRequester requester;
    
    public void initComponents() {
        setDisplayHomeAsUpEnabled(true);
        findViewById(R.id.item_user_account).setOnClickListener(this);
        findViewById(R.id.item_group_id).setOnClickListener(this);
        findViewById(R.id.item_public_account).setOnClickListener(this);
        requester = new HttpAPIRequester(this);
        label_user = (TextView)findViewById(R.id.label_user_account);
        label_group = (TextView)findViewById(R.id.label_group_id);
        label_pubaccount = (TextView)findViewById(R.id.label_public_account);
        keyword = (EditText)findViewById(R.id.keyword);
        keyword.addTextChangedListener(this);
    }
    
    public void onClick(View v) {
        switch(v.getId()) {
            case R.id.item_group_id:
            {
                requester.execute(new TypeReference<AddCenterActivity>() {
                      }.getType(), null, URLConstant.GROUP_DETAILED_URL);
                break;
            }
            case R.id.item_user_account:
            {
                requester.execute(new TypeReference<AddCenterActivity>() {}.getType(), null,  URLConstant.USER_DETAILED_URL);
                break;
            }
            case R.id.item_public_account:
            {
                requester.execute(new TypeReference<AddCenterActivity>() {
                   }.getType(), null,  URLConstant.PUBACCOUNT_DETAILED_URL);
                break;
            }
            case R.id.label_user_account:
            case R.id.label_group_id:
            {
                break;
            }
        }
    }
    
    public void onSuccess(Object data, List list, Page page, String code, String url) {
        hideProgressDialog();
        if (data == null) {
            showToast(R.string.tip_search_noresult);
        }
        if ((data instanceof Friend))
        {
            Intent intent = new Intent(this, UserDetailActivity.class);
            intent.putExtra("user", (Friend)data);
            startActivity(intent);
        }
        if ((data instanceof Group))
        {
            Intent intent = new Intent(this, GroupDetailActivity.class);
            intent.putExtra("group", (Group)data);
            startActivity(intent);
        }
        if ((data instanceof PublicAccount))
        {
            Intent intent = new Intent(this, PubAccountDetailActivity.class);
            intent.putExtra(PublicAccount.NAME, (PublicAccount)data);
            startActivity(intent);
        }
    }
    
    public void onFailed(Exception e) {
        hideProgressDialog();
        showToast(R.string.tip_search_noresult);
    }
    
    public Map getRequestParams(String code) {
        apiParams.put("account", keyword.getText().toString());
        apiParams.put("groupId", keyword.getText().toString());
        return apiParams;
    }
    
    public void onRequest() {
        showProgressDialog(getString(R.string.tip_loading, new Object[] {getString(R.string.common_query)}));
    }
    
    public int getConentLayout() {
        return R.layout.activity_query_add_center;
    }
    
    public int getActionBarTitle() {
        return R.string.common_add;
    }
    
    public void afterTextChanged(Editable s) {
    }
    
    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
    }
    
    public void onTextChanged(CharSequence s, int start, int before, int count) {
        if(TextUtils.isEmpty(s)) {
            findViewById(R.id.item_user_account).setVisibility(View.GONE);
            findViewById(R.id.item_group_id).setVisibility(View.GONE);
            findViewById(R.id.item_public_account).setVisibility(View.GONE);
            return;
        }
        findViewById(R.id.item_user_account).setVisibility(View.VISIBLE);
        findViewById(R.id.item_group_id).setVisibility(View.VISIBLE);
        findViewById(R.id.item_public_account).setVisibility(View.VISIBLE);
        SpannableStringBuilder text = new SpannableStringBuilder(getString(R.string.label_search_group, new Object[] {keyword.getText().toString()}));
        text.setSpan(new ForegroundColorSpan(Color.parseColor("#45C01A")), 0x5, (keyword.getText().toString().length() + 0x5), 0x21);
        label_group.setText(text);
        text.clear();
        text.append(getString(R.string.label_search_user, new Object[] {keyword.getText().toString()}));
        text.setSpan(new ForegroundColorSpan(Color.parseColor("#45C01A")), 0x5, (keyword.getText().toString().length() + 0x5), 0x21);
        label_user.setText(text);
        text.clear();
        text.append(getString(R.string.label_search_pubaccount, new Object[] {keyword.getText().toString()}));
        text.setSpan(new ForegroundColorSpan(Color.parseColor("#45C01A")), 0x5, (keyword.getText().toString().length() + 0x5), 0x21);
        label_pubaccount.setText(text);
    }
}
