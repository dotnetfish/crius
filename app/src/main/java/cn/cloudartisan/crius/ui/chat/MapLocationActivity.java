/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.ui.chat;

import android.content.Intent;
import android.graphics.Bitmap;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import com.baidu.location.BDLocation;
import com.baidu.location.BDLocationListener;
import com.baidu.location.LocationClient;
import com.baidu.location.LocationClientOption;
import com.baidu.mapapi.map.*;
import com.baidu.mapapi.model.LatLng;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.Constant;
import cn.cloudartisan.crius.ui.base.BaseActivity;
import cn.cloudartisan.crius.util.StringUtils;

import java.io.File;
import java.io.FileOutputStream;
import java.util.HashMap;

public class MapLocationActivity extends BaseActivity implements BDLocationListener, BaiduMap.SnapshotReadyCallback, BaiduMap.OnMapLoadedCallback {
    Button button;
    BaiduMap mBaiduMap;
    private LocationClient mLocClient;
    HashMap<String, Object> mapData;
    private MapView mapView;
    
    public void initComponents() {
        setDisplayHomeAsUpEnabled(true);
        mapView = (MapView)findViewById(R.id.mapView);
        mapView.showZoomControls(false);
        mBaiduMap = mapView.getMap();
        mBaiduMap.setOnMapLoadedCallback(this);
        mBaiduMap.setMyLocationEnabled(true);
        mLocClient = new LocationClient(this);
        mLocClient.registerLocationListener(this);
        LocationClientOption option = new LocationClientOption();
        option.setOpenGps(true);
        option.setCoorType("bd09ll");
        option.setIsNeedAddress(true);
        mLocClient.setLocOption(option);
    }
    
    public void onReceiveLocation(BDLocation location) {
        if(location != null) {
            button.setEnabled(true);
            double latitude = location.getLatitude();
            double longitude = location.getLongitude();
            LatLng ll = new LatLng(location.getLatitude(), location.getLongitude());
            MapStatusUpdate u = MapStatusUpdateFactory.newLatLng(ll);
            mBaiduMap.animateMapStatus(u);
            MarkerOptions options = new MarkerOptions().position(ll).icon(BitmapDescriptorFactory.fromResource(R.drawable.icon_location));
            OverlayOptions ooA = new MarkerOptions().position(ll).zIndex(0x9).draggable(true);
            mBaiduMap.addOverlay(ooA);
            ( (TextView)findViewById(R.id.text)).setVisibility(View.VISIBLE);
            ((TextView)findViewById(R.id.text)).setText(getString(R.string.common_current_location, new Object[] {location.getAddrStr()}));
            mapData.put("latitude", Double.valueOf(latitude));
            mapData.put("longitude", Double.valueOf(longitude));
            mapData.put("address", location.getAddrStr());
            mLocClient.stop();
        }
    }
    
    protected void onResume() {
        super.onResume();
        mapView.onResume();
    }
    
    protected void onPause() {
        super.onPause();
        mapView.onPause();
    }
    
    public void onDestroy() {
        super.onDestroy();
        mapView.onDestroy();
        if(mLocClient != null) {
            mLocClient.stop();
        }
        mLocClient = null;
    }
    
    public void onClick(View v) {
        switch(v.getId()) {
            case R.id.button:
            {
                mBaiduMap.snapshot(this);
                break;
            }
        }
    }
    
    public void onSnapshotReady(Bitmap bitmap) {
        File file = new File(Constant.CACHE_DIR_IMAGE, StringUtils.getUUID());
        try {
            bitmap.compress(Bitmap.CompressFormat.JPEG, 0x64, new FileOutputStream(file));
            mapData.put("file", file.getName());
            Intent intent = new Intent();
            intent.putExtra("data", mapData);
            setResult(-0x1, intent);
            finish();
            return;
        } catch(Exception e1) {
            e1.printStackTrace();
        }
    }
    
    public int getConentLayout() {
        return R.layout.activity_map_view;
    }
    
    public int getActionBarTitle() {
        return R.string.common_location;
    }
    
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.single_button, menu);
        button = (Button)menu.findItem(R.id.menu_button).getActionView().findViewById(R.id.button);
        button.setOnClickListener(this);
        button.setEnabled(false);
        mLocClient.start();
        mLocClient.requestLocation();
        return super.onCreateOptionsMenu(menu);
    }
    
    public void onMapLoaded() {
        mBaiduMap.setMapStatus(MapStatusUpdateFactory.zoomTo(14.0f));
    }
}
