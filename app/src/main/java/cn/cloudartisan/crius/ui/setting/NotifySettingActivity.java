/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.ui.setting;

import android.media.RingtoneManager;
import android.view.View;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.ClientConfig;
import cn.cloudartisan.crius.app.Global;
import cn.cloudartisan.crius.app.GlobalMediaPlayer;
import cn.cloudartisan.crius.bean.User;
import cn.cloudartisan.crius.db.ConfigDBManager;
import cn.cloudartisan.crius.ui.base.BaseActivity;

import java.util.HashMap;

public class NotifySettingActivity extends BaseActivity implements CompoundButton.OnCheckedChangeListener {
    HashMap<String, String> configs;
    User user;
    
    public void initComponents() {
        setDisplayHomeAsUpEnabled(true);
        configs = ConfigDBManager.getManager().queryConfigs();
        user = Global.getCurrentUser();
        findViewById(R.id.classicSoundSwitch).setOnClickListener(this);
        findViewById(R.id.dingdongSoundSwitch).setOnClickListener(this);
        findViewById(R.id.systemSoundSwitch).setOnClickListener(this);
        if(ClientConfig.soundIsEnable()) {
            findViewById(R.id.soundSwitchPanel).setVisibility(View.VISIBLE);
            ( (CheckBox)findViewById(R.id.soundSwitch)).setChecked(true);
        } else {
            findViewById(R.id.soundSwitchPanel).setVisibility(View.GONE);
            ((CheckBox)findViewById(R.id.soundSwitch)).setChecked(false);
        }
        if(("1".equals(configs.get("message_sound_type"))) || (configs.get("message_sound_type") == null)) {
            findViewById(R.id.classicSoundMark).setVisibility(View.VISIBLE);
        }
        if("2".equals(configs.get("message_sound_type"))) {
            findViewById(R.id.dingdongSoundMark).setVisibility(View.VISIBLE);
        }
        if("3".equals(configs.get("message_sound_type"))) {
            findViewById(R.id.systemSoundMark).setVisibility(View.VISIBLE);
        }
        if(ClientConfig.disturbIsEnable()) {
            ((CheckBox)findViewById(R.id.disturbSwitch)).setChecked(true);
        } else {
            ((CheckBox)findViewById(R.id.disturbSwitch)).setChecked(false);
        }
        if(ClientConfig.notifyIsEnable()) {
            ((CheckBox)findViewById(R.id.notifySwitch)).setChecked(true);
        } else {
            ((CheckBox)findViewById(R.id.notifySwitch)).setChecked(false);
        }
        ((CheckBox)findViewById(R.id.disturbSwitch)).setOnCheckedChangeListener(this);
        ((CheckBox)findViewById(R.id.soundSwitch)).setOnCheckedChangeListener(this);
        ((CheckBox)findViewById(R.id.notifySwitch)).setOnCheckedChangeListener(this);
    }
    
    public void onClick(View v) {
        switch(v.getId()) {
            case R.id.classicSoundSwitch:
            {
                GlobalMediaPlayer.getPlayer().start(R.raw.classic);
                findViewById(R.id.classicSoundMark).setVisibility(View.VISIBLE);
                findViewById(R.id.systemSoundMark).setVisibility(View.GONE);
                findViewById(R.id.dingdongSoundMark).setVisibility(View.GONE);
                ConfigDBManager.getManager().saveConfig("message_sound_type", "1");
                break;
            }
            case R.id.dingdongSoundSwitch:
            {
                GlobalMediaPlayer.getPlayer().start(R.raw.dingdong);
                findViewById(R.id.dingdongSoundMark).setVisibility(View.VISIBLE);
                findViewById(R.id.systemSoundMark).setVisibility(View.GONE);
                findViewById(R.id.classicSoundMark).setVisibility(View.GONE);
                ConfigDBManager.getManager().saveConfig("message_sound_type", "2");
                break;
            }
            case R.id.systemSoundSwitch:
            {
                RingtoneManager.getRingtone(this, RingtoneManager.getDefaultUri(0x2)).play();
                findViewById(R.id.systemSoundMark).setVisibility(View.VISIBLE);
                findViewById(R.id.dingdongSoundMark).setVisibility(View.GONE);
                findViewById(R.id.classicSoundMark).setVisibility(View.GONE);
                ConfigDBManager.getManager().saveConfig("message_sound_type", "3");
                break;
            }
            case R.id.classicSoundMark:
            case R.id.dingdongSoundMark:
            {
                break;
            }
        }
    }
    
    public void onCheckedChanged(CompoundButton arg0, boolean flag) {
        if(arg0.getId() == R.id.disturbSwitch) {
            if(flag) {
                ClientConfig.disturbEnable();
                return;
            }
            ClientConfig.disturbDisEnable();
            return;
        }
        if(arg0.getId() == R.id.notifySwitch) {
            if(flag) {
                ClientConfig.notifyEnable();
                return;
            }
            ClientConfig.notifyDisEnable();
            return;
        }
        if(flag) {
            findViewById(R.id.soundSwitchPanel).setVisibility(View.VISIBLE);
            ClientConfig.soundEnable();
            return;
        }
        findViewById(R.id.soundSwitchPanel).setVisibility(View.GONE);
        ClientConfig.soundDisEnable();
    }
    
    public int getConentLayout() {
        return R.layout.activity_notify_setting;
    }
    
    public int getActionBarTitle() {
        return R.string.label_setting_notify;
    }
}
