/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.ui.chat;

import android.content.Intent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import com.alibaba.fastjson.JSON;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.adapter.PubChatListViewAdapter;
import cn.cloudartisan.crius.app.Global;
import cn.cloudartisan.crius.bean.*;
import cn.cloudartisan.crius.component.PubAccountInputPanelView;
import cn.cloudartisan.crius.component.PubChatListView;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.db.PublicAccountDBManager;
import cn.cloudartisan.crius.db.PublicMenuDBManager;
import cn.cloudartisan.crius.network.PublicAccountMenuHander;
import cn.cloudartisan.crius.ui.base.CIMMonitorActivity;
import cn.cloudartisan.crius.ui.contact.PubAccountDetailActivity;
import cn.cloudartisan.crius.util.ChatRecordTimeAscComparator;
import cn.cloudartisan.crius.util.MessageUtil;
import cn.cloudartisan.crius.util.StringUtils;
import cn.cloudartisan.crius.widget.PubAccountMenuWindow;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class PubAccountChatActivity extends CIMMonitorActivity implements PubAccountMenuWindow.OnMenuClickListener, PubAccountInputPanelView.OnOperationListener, PubChatListView.OnOptEventListener {
    public PubChatListViewAdapter adapter;
    public PubChatListView chatListView;
    public int currentPage;
    PubAccountInputPanelView customInputPanelView;
    String[] includeTypes;
    protected cn.cloudartisan.crius.bean.Message lastMessage;
    public ArrayList<cn.cloudartisan.crius.bean.Message> messageList;
    View progressView;
    PublicAccount publicAccount;
    public User self;
    
    public void initComponents() {
        setDisplayHomeAsUpEnabled(true);
        publicAccount = (PublicAccount)getIntent().getSerializableExtra(PublicAccount.NAME);
        setTitle(publicAccount.name);
        self = Global.getCurrentUser();
        chatListView = (PubChatListView)findViewById(R.id.chat_list);
        progressView = findViewById(R.id.menu_progress_view);
        chatListView.setOnOptEventListener(this);
        customInputPanelView = (PubAccountInputPanelView)findViewById(R.id.customInputPanelView);
        customInputPanelView.buildMenus(PublicMenuDBManager.getManager().queryPublicMenuList(publicAccount.account));
        customInputPanelView.setOnMenuClickListener(this);
        customInputPanelView.setOnOperationListener(this);
        self = Global.getCurrentUser();
        adapter = new PubChatListViewAdapter(this, messageList, publicAccount);
        chatListView.setAdapter(adapter);
        loadChatRecord();
    }
    
    public void onResume() {
        super.onResume();
        publicAccount = PublicAccountDBManager.getManager().queryPublicAccount(publicAccount.account);
        if(publicAccount == null) {
            lastMessage = null;
            finish();
        }
    }
    
    public void loadChatRecord() {
        List<cn.cloudartisan.crius.bean.Message> data = MessageDBManager.getManager().queryMessage(publicAccount.account, includeTypes, currentPage);
        if((data != null) && (!data.isEmpty())) {
            messageList.addAll(data);
            Collections.sort(messageList, new ChatRecordTimeAscComparator());
            adapter.notifyDataSetChanged();
            if (currentPage == 0x1) {
                chatListView.setSelection(messageList.size());
            } else {
                chatListView.setSelection(data.size());
            }
        }else {
                currentPage = (currentPage - 0x1);

        }
        chatListView.previousComplete();
    }
    
    public void onMessageReceived(cn.cloudartisan.crius.client.model.Message message) {
        cn.cloudartisan.crius.bean.Message msg = MessageUtil.transform(message);
        if(("201".equals(msg.type)) && (msg.sender.equals(publicAccount.account))) {
            lastMessage = MessageUtil.transform(message);
            messageList.add(lastMessage);
            adapter.notifyDataSetChanged();
            chatListView.setSelection(chatListView.getBottom());
            if((messageList.size() == 0x1) && (currentPage == 0)) {
                currentPage = 0x1;
            }
        }
    }
    
    public void onPreviouPage() {
        currentPage = (currentPage + 0x1);
        loadChatRecord();
    }
    
    public void onClick(View v) {
    }
    
    public void finish() {
        if(lastMessage != null) {
            ChatItem chatItem = new ChatItem();
            chatItem.source = publicAccount;
            chatItem.message = lastMessage;
            Intent intent = new Intent();
            intent.putExtra("data", chatItem);
            intent.setAction("com.farsunset.cim.MESSAGE_APPEND");
            sendBroadcast(intent);
        }
        super.finish();
    }
    
    public void onDestroy() {
        messageList.clear();
        messageList = null;
        unregisterReceiver(chatListView.messageSendReceiver);
        super.onDestroy();
    }
    
    public int getConentLayout() {
        return R.layout.activity_pubaccount_chat;
    }
    
    public int getActionBarTitle() {
        return R.string.common_back;
    }
    
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.single_icon, menu);
        menu.findItem(R.id.menu_icon).setIcon(getMenuIcon());
        return super.onCreateOptionsMenu(menu);
    }
    
    public int getMenuIcon() {
        return R.drawable.ofm_profile_icon;
    }
    
    public boolean onOptionsItemSelected(MenuItem item) {
        Intent intent = new Intent();
        intent.setClass(this, PubAccountDetailActivity.class);
        intent.putExtra(PublicAccount.NAME, publicAccount);
        startActivity(intent);
        return super.onOptionsItemSelected(item);
    }
    
    public void onMenuClicked(PublicMenu menu) {
        if(menu.isWebMenu()) {
            Intent intent = new Intent(this, MMWebViewActivity.class);
            intent.putExtra("url", menu.link);
            startActivity(intent);
        }
        if(menu.isApiMenu()) {
            progressView.setVisibility(View.VISIBLE);
            PublicAccountMenuHander.execute(publicAccount, menu);
        }
        if(menu.isTextMenu()) {
            lastMessage = new cn.cloudartisan.crius.bean.Message();
            lastMessage.content = menu.content;
            lastMessage.sender = publicAccount.account;
            lastMessage.receiver = self.getAccount();
            lastMessage.fileType = "0";
            lastMessage.type = "201";
            lastMessage.status = "1";
            lastMessage.gid = StringUtils.getUUID();
            lastMessage.createTime = String.valueOf(System.currentTimeMillis());
            PubTextMessage textMsg = new PubTextMessage();
            textMsg.content = menu.content;
            lastMessage.content = JSON.toJSONString(textMsg);
            MessageDBManager.getManager().saveMessage(lastMessage);
            messageList.add(lastMessage);
            adapter.notifyDataSetChanged();
        }
    }
    
    public void onSendContent(String content) {
        cn.cloudartisan.crius.bean.Message message = new cn.cloudartisan.crius.bean.Message();
        message.gid = String.valueOf(System.currentTimeMillis());
        message.content = content;
        message.sender = self.getAccount();
        message.receiver = publicAccount.account;
        message.fileType = "0";
        message.type = "200";
        message.createTime = String.valueOf(System.currentTimeMillis());
        message.status = "-1";
        lastMessage = message;
        messageList.add(message);
        adapter.notifyDataSetChanged();
        chatListView.setSelection(chatListView.getBottom());
        if((messageList.size() == 0x1) && (currentPage == 0)) {
            currentPage = 0x1;
        }
    }
    
    public void onTouchDown() {
        customInputPanelView.reset();
    }
    
    public void onKeyboardShow() {
        chatListView.setSelection(chatListView.getBottom());
    }
    
    public void onPubMenuFinish() {
        progressView.setVisibility(View.GONE);
    }
}
