/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.ui.contact;

import android.content.Intent;
import android.graphics.Bitmap;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;
import com.alibaba.fastjson.TypeReference;
import cn.cloudartisan.crius.client.constant.CIMConstant;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.Global;
import cn.cloudartisan.crius.app.URLConstant;
import cn.cloudartisan.crius.bean.ChatItem;
import cn.cloudartisan.crius.bean.Friend;
import cn.cloudartisan.crius.bean.Page;
import cn.cloudartisan.crius.bean.User;
import cn.cloudartisan.crius.component.WebImageView;
import cn.cloudartisan.crius.db.FriendDBManager;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.network.HttpAPIRequester;
import cn.cloudartisan.crius.network.HttpAPIResponser;
import cn.cloudartisan.crius.ui.base.BaseActivity;
import cn.cloudartisan.crius.ui.chat.FriendChatActivity;
import cn.cloudartisan.crius.ui.trend.UCircleHomeActivity;
import cn.cloudartisan.crius.util.FileURLBuilder;
import cn.cloudartisan.crius.widget.CustomDialog;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.FailReason;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;

import java.util.List;
import java.util.Map;

public class UserDetailActivity extends BaseActivity implements CustomDialog.OnOperationListener, HttpAPIResponser, ImageLoadingListener {
    CustomDialog customDialog;
    HttpAPIRequester detailedRequester;
    HttpAPIResponser detailedResponser = new HttpAPIResponser() {
        public Map<String, Object> getRequestParams(String code) {
            UserDetailActivity.this.apiParams.put("account", UserDetailActivity.this.friend.account);
            return UserDetailActivity.this.apiParams;
        }

        public void onFailed(Exception var1) {
        }

        public void onRequest() {
        }

        public void onSuccess(Object var1, List var2, Page var3, String var4, String var5) {
            if(CIMConstant.ReturnCode.CODE_200.equals(var4) && var1 instanceof Friend) {
                UserDetailActivity.this.friend = (Friend)var1;
                ((TextView)UserDetailActivity.this.findViewById(R.id.name)).setText(UserDetailActivity.this.friend.name);
                ((TextView)UserDetailActivity.this.findViewById(R.id.motto)).setText(UserDetailActivity.this.friend.motto);
                if("1".equals(UserDetailActivity.this.friend.gender)) {
                    ((TextView)UserDetailActivity.this.findViewById(R.id.gender)).setText(R.string.common_man);
                }

                if("0".equals(UserDetailActivity.this.friend.gender)) {
                    ((TextView)UserDetailActivity.this.findViewById(R.id.gender)).setText(R.string.common_female);
                }
            }

        }
    };
    Friend friend;
    WebImageView icon;
    HttpAPIRequester requester;
    User self;
    
    public void initComponents() {
        setDisplayHomeAsUpEnabled(true);
        friend = (Friend)getIntent().getSerializableExtra("user");
        self = Global.getCurrentUser();
        requester = new HttpAPIRequester(this);
        detailedRequester = new HttpAPIRequester(detailedResponser);
        findViewById(R.id.item_album).setOnClickListener(this);
        icon = (WebImageView)findViewById(R.id.icon);
        icon.setPopuShowAble();
        ((TextView)findViewById(R.id.account)).setText(friend.account);
        DisplayImageOptions.Builder builder = new DisplayImageOptions.Builder();
        builder.displayer(new RoundedBitmapDisplayer(0x3e7));
        ImageLoader.getInstance().displayImage(FileURLBuilder.getUserIconUrl(friend.account), icon, builder.build(), this);
        ((TextView)findViewById(R.id.name)).setText(friend.name);
        ((TextView)findViewById(R.id.motto)).setText(friend.motto);
        if("1".equals(friend.gender)) {
            ( (TextView)findViewById(R.id.gender)).setText(R.string.common_man);
        }
        if("0".equals(friend.gender)) {
            ( (TextView)findViewById(R.id.gender)).setText(R.string.common_female);
        }
    }
    
    public void onClick(View v) {
        switch(v.getId()) {
            case R.id.chatButton:
            {
                Intent chatIntent = new Intent(this, FriendChatActivity.class);
                chatIntent.putExtra("othersId", friend.account);
                chatIntent.putExtra("othersName", friend.name);
                startActivity(chatIntent);
                break;
            }
            case R.id.item_album:
            {
                Intent uintent = new Intent(this, UCircleHomeActivity.class);
                uintent.putExtra("friend", friend);
                startActivity(uintent);
                break;
            }
            case R.id.item_setting:
            {
                break;
            }
        }
    }
    
    public void onRightClick() {
        customDialog.dismiss();
        requester.execute(new TypeReference<UserDetailActivity>() {}.getType(), null, URLConstant.FRIEND_DELETE_URL);
    }
    
    public void onLeftClick() {
        customDialog.dismiss();
    }
    
    public void onSuccess(Object data, List list, Page page, String code, String url) {
        hideProgressDialog();
        if(CIMConstant.ReturnCode.CODE_200.equals(code)) {
            apiParams.put("content", self.getAccount() + "\"}");
            apiParams.put("sender", "system");
            apiParams.put("receiver", friend.account);
            apiParams.put("type", "109");
            HttpAPIRequester.execute(apiParams, URLConstant.MESSAGE_SEND_URL);
            FriendDBManager.getManager().deleteFriend(friend.account);
            MessageDBManager.getManager().deleteBySender(friend.account);
            Intent intent = new Intent();
            intent.setAction("com.farsunset.cim.DELETE_CONTACTS");
            sendBroadcast(intent);
            intent.setAction("com.farsunset.cim.DELETE_APPEND");
            intent.putExtra(ChatItem.NAME, new ChatItem(friend));
            sendBroadcast(intent);
            finish();
        }
    }
    
    public void onFailed(Exception e) {
        hideProgressDialog();
    }
    
    public Map getRequestParams(String code) {
        apiParams.put("account", self.getAccount());
        apiParams.put("friend", friend.account);
        return apiParams;
    }
    
    public void onRequest() {
        showProgressDialog(getString(R.string.tip_loading, new Object[] {getString(R.string.common_delete)}));
    }
    
    public int getConentLayout() {
        return R.layout.activity_user_detail;
    }
    
    public int getActionBarTitle() {
        return R.string.common_detailed;
    }
    
    public boolean onCreateOptionsMenu(Menu menu) {
        if(FriendDBManager.getManager().queryFriend(friend.account) != null) {
            findViewById(R.id.chatButton).setOnClickListener(this);
            findViewById(R.id.chatButton).setVisibility(View.VISIBLE);
            customDialog = new CustomDialog(this);
            customDialog.setOperationListener(this);
            customDialog.setTitle(R.string.title_remove_friend);
            customDialog.setMessage(getString(R.string.tip_remove_friend));
            customDialog.setButtonsText(getString(R.string.common_cancel), getString(R.string.common_confirm));
            getMenuInflater().inflate(R.menu.user_detailed, menu);
        } else if(!friend.account.equals(self.getAccount())) {
            getMenuInflater().inflate(R.menu.menu_addfriend, menu);
            detailedRequester.execute(new TypeReference<UserDetailActivity>() {}.getType(), null, URLConstant.USER_DETAILED_URL);
        }
        return super.onCreateOptionsMenu(menu);
    }
    
    public boolean onOptionsItemSelected(MenuItem item) {
        switch(item.getItemId()) {
            case R.id.bar_menu_delete:
            {
                customDialog.show();
                break;
            }
            case R.id.menu_add_friend:
            {
                Intent intent = new Intent(this, AllyRequestActivity.class);
                intent.putExtra("user", friend);
                startActivity(intent);
                break;
            }
            case R.id.bar_menu_invite:
            {
                return super.onOptionsItemSelected(item);
            }
        }
        return super.onOptionsItemSelected(item);
    }
    
    public void onLoadingCancelled(String arg0, View arg1) {
    }
    
    public void onLoadingComplete(String url, View arg1, Bitmap arg2) {
        icon.setUrl(url);
    }
    
    public void onLoadingFailed(String arg0, View arg1, FailReason arg2) {
        DisplayImageOptions.Builder builder = new DisplayImageOptions.Builder();
        builder.displayer(new RoundedBitmapDisplayer(0x3e7));
        ImageLoader.getInstance().displayImage("drawable://R.drawable.icon_head_default", icon, builder.build());
    }
    
    public void onLoadingStarted(String arg0, View arg1) {
    }
}
