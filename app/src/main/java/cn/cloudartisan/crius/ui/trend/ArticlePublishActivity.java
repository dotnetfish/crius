/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.ui.trend;

import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Build;
import android.view.ContextMenu;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.EditText;
import com.alibaba.fastjson.JSON;
import cn.cloudartisan.crius.client.constant.CIMConstant;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.adapter.PhotoGridViewAdapter;
import cn.cloudartisan.crius.bean.*;
import cn.cloudartisan.crius.component.CustomGridView;
import cn.cloudartisan.crius.db.ArticleDBManager;
import cn.cloudartisan.crius.network.ArticlePublishRequester;
import cn.cloudartisan.crius.network.HttpAPIResponser;
import cn.cloudartisan.crius.ui.base.BaseActivity;
import cn.cloudartisan.crius.ui.util.ImageChoiceActivity;
import cn.cloudartisan.crius.util.BitmapUtil;
import cn.cloudartisan.crius.util.StringUtils;
import cn.cloudartisan.crius.widget.CustomDialog;
import com.nostra13.universalimageloader.core.ImageLoader;
import org.apache.commons.io.FileUtils;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ArticlePublishActivity extends BaseActivity implements AdapterView.OnItemClickListener, HttpAPIResponser, AdapterView.OnItemLongClickListener, CustomDialog.OnOperationListener {
    protected PhotoGridViewAdapter adapter;
    Article article;
    EditText content;
    CustomDialog customDialog;
    CustomGridView imageGridView;
    PubLinkMessage linkMessage;
    private ArrayList<SNSImage> list;
    File photoFile;
    int removeIndex;
    ArticlePublishRequester requester;
    User self;
    
    public void initComponents() {
        // :( Parsing error. Please contact me.
    }
    
    public void onClick(View v) {
        switch(v.getId()) {
            case R.id.button:
            {
                if((list.size() == 0x1) && (StringUtils.isEmpty(content.getText().toString()))) {
                    showToast(R.string.tip_required_article);
                    return;
                }
                requester = new ArticlePublishRequester(this);
                getRequestParams("");
                requester.publish(article);
                break;
            }
        }
    }
    
    public void onItemClick(AdapterView<?> arg0, View arg1, int index, long arg3) {
        if(index == (list.size() - 0x1)) {
            if(list.size() == 0xa) {
                showToast(R.string.tip_max_nine_picture);
                return;
            }
            customDialog.show();
        }
    }
    
    public void onSuccess(Object data, List datalist, Page page, String code, String url) {
        hideProgressDialog();
        if(CIMConstant.ReturnCode.CODE_200.equals(code)) {
            article.gid = String.valueOf(data);
            article.timestamp = String.valueOf(System.currentTimeMillis());
            ArticleDBManager.getManager().save(article);
            showToast(R.string.tip_publish_complete);
            Intent intent = new Intent();
            intent.putExtra("article", article);
            setResult(-0x1, intent);
            finish();
            list.clear();
        }
    }
    
    public void onFailed(Exception e) {
        hideProgressDialog();
    }
    
    public Map getRequestParams(String code) {
        if(list.size() > 0x1) {
            ArrayList<SNSImage> temp = new ArrayList<SNSImage>();
            temp.addAll(list);
            temp.remove((temp.size() - 0x1));
            apiParams.put("thumbnail", JSON.toJSONString(temp));
            article.thumbnail = String.valueOf(apiParams.get("thumbnail"));
            temp.clear();
        }
        HashMap<String, Object> map = new HashMap<String, Object>();
        map.put("content", content.getText().toString().trim());
        map.put("name", self.getName());
        map.put("device", Build.MODEL);
        apiParams.put("type", "0");
        if(linkMessage != null) {
            map.put("link", linkMessage);
            apiParams.put("type", "1");
        }
        apiParams.put("content", JSON.toJSONString(map));
        apiParams.put("account", self.getAccount());
        article.content = String.valueOf(apiParams.get("content"));
        article.account = String.valueOf(apiParams.get("account"));
        article.type = String.valueOf(apiParams.get("type"));
        return apiParams;
    }
    
    public void onRequest() {
        showProgressDialog(getString(R.string.tip_loading, new Object[0x1]));
        //new Object[0x1][localconst/41] = getString(R.string.label_circle_publish);
    }
    
    public void onCreateContextMenu(ContextMenu menu, View v, ContextMenu.ContextMenuInfo menuInfo) {
        menu.add(0x1, 0x7fffffff, 0x1, getString(R.string.common_delete));
        super.onCreateContextMenu(menu, v, menuInfo);
    }
    
    public boolean onContextItemSelected(MenuItem item) {
        if(item.getItemId() == 0x7fffffff) {
            list.remove(removeIndex);
            adapter.notifyDataSetChanged();
        }
        return true;
    }
    
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        if(resultCode == -0x1) {
            if (requestCode == 0x1) {
                Bitmap bitmap = ImageLoader.getInstance().loadImageSync(photoFile.getAbsolutePath());
                pack(bitmap, photoFile);
                bitmap.recycle();
                return;
            }
            if (requestCode == 0x2) {
                try {
                    List<File> files = (List) data.getSerializableExtra("files");
                    if (files == null) {
                        files = new ArrayList();
                        files.add((File) data.getSerializableExtra("file"));
                    } else {
                        for (File file : files) {
                            Bitmap bitmap = ImageLoader.getInstance().loadImageSync(file.getAbsolutePath());
                            photoFile = new File("/" + StringUtils.getUUID());
                            FileUtils.copyFile(file, photoFile);
                            pack(bitmap, photoFile);
                        }

                    }
                } catch (IOException e) {
                    e.printStackTrace();

                }
            }
        }
    }
    
    public void pack(Bitmap bitmap, File file) {
        SNSImage image = new SNSImage();
        String orgImage = file.getName();
        file.renameTo(new File("/" + orgImage));
        bitmap = BitmapUtil.compressionAndSavePhoto(bitmap, file);
        image.image = orgImage;
        image.oh = bitmap.getHeight();
        image.ow = bitmap.getWidth();
        String thumbnailFile = StringUtils.getUUID();
        Bitmap thumbnail = BitmapUtil.getThumbnail(bitmap, thumbnailFile);
        image.th = thumbnail.getHeight();
        image.tw = thumbnail.getWidth();
        if(thumbnail == bitmap) {
            image.thumbnail = image.image;
        } else {
            image.thumbnail = thumbnailFile;
            thumbnail.recycle();
        }
        bitmap.recycle();
        list.add((list.size() - 0x1), image);
        adapter.notifyDataSetChanged();
    }
    
    public boolean onItemLongClick(AdapterView<?> arg0, View arg1, int index, long arg3) {
        if((list.size() - 0x1) != index) {
            removeIndex = index;
            return false;
        }
        return true;
    }
    
    public void onLeftClick() {
        customDialog.dismiss();
        photoFile = new File("/" + StringUtils.getUUID());
        Intent intentCamera = new Intent("android.media.action.IMAGE_CAPTURE");
        intentCamera.putExtra("orientation", 0x0);
        intentCamera.putExtra("output", Uri.fromFile(photoFile));
        startActivityForResult(intentCamera, 0x1);
    }
    
    public void onRightClick() {
        customDialog.dismiss();
        Intent intentFromGallery = new Intent();
        intentFromGallery.setClass(this, ImageChoiceActivity.class);
        intentFromGallery.putExtra(ImageChoiceActivity.KEY_MAX_COUNT, (list.size() + 0x1));
        startActivityForResult(intentFromGallery, 0x2);
    }
    
    public int getConentLayout() {
        return R.layout.activity_article_publish;
    }
    
    public int getActionBarTitle() {
        return R.string.label_circle_publish;
    }
    
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.single_button, menu);
        menu.findItem(R.id.menu_button).getActionView().findViewById(R.id.button).setOnClickListener(this);
        ( (Button)menu.findItem(R.id.menu_button).getActionView().findViewById(R.id.button)).setText(R.string.label_publish);
        return super.onCreateOptionsMenu(menu);
    }
}
