/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.ui.chat;

import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.adapter.SystemMsgListViewAdapter;
import cn.cloudartisan.crius.component.PullFooterMoreListView;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.ui.base.CIMMonitorActivity;
import cn.cloudartisan.crius.util.MessageUtil;
import cn.cloudartisan.crius.widget.CustomDialog;

import java.util.ArrayList;
import java.util.List;

public class SystemMessageActivity extends CIMMonitorActivity implements PullFooterMoreListView.OnRefreshListener, CustomDialog.OnOperationListener {
    protected SystemMsgListViewAdapter adapter;
    int currentPage;
    CustomDialog customDialog;
    private ArrayList<cn.cloudartisan.crius.bean.Message> list=new ArrayList<>();
    protected PullFooterMoreListView messageListView;
    public static String[] containedTypes = new String[]{"2", "101", "103", "104", "106", "107"};
    
    public void initComponents() {
        setDisplayHomeAsUpEnabled(true);
        messageListView = (PullFooterMoreListView)findViewById(R.id.messageListView);
        messageListView.setOnRefreshListener(this);
        adapter = new SystemMsgListViewAdapter(this, list);
        messageListView.setAdapter(adapter);
        loadMessageRecord(currentPage);
        customDialog = new CustomDialog(this);
        customDialog.setOperationListener(this);
        customDialog.setTitle(R.string.common_delete);
        customDialog.setMessage(getString(R.string.tip_delete_system_message));
        customDialog.setButtonsText(getString(R.string.common_cancel), getString(R.string.common_confirm));
    }
    
    public void onClick(View v) {
        v.getId();
    }
    
    public void loadMessageRecord(int page) {
        List var3 = MessageDBManager.getManager().queryExpectSystemMessageList(containedTypes, page);
        PullFooterMoreListView var4 = this.messageListView;
        boolean var2;
        if(var3 != null && !var3.isEmpty() && var3.size() % 10 == 0) {
            var2 = true;
        } else {
            var2 = false;
        }

        var4.showMoreComplete(var2);
        if(var3 != null && !var3.isEmpty()) {
            if(this.currentPage == 1) {
                this.list.clear();
            }

            this.list.addAll(var3);
            this.adapter.notifyDataSetChanged();
        } else if(this.currentPage > 1) {
            --this.currentPage;
            return;
        }
    }
    
    public void onMessageReceived(cn.cloudartisan.crius.client.model.Message message) {
        cn.cloudartisan.crius.bean.Message msg = MessageUtil.transform(message);
        if((msg.sender.equals("system")) && (!msg.isNoNeedShow())) {
            list.add(0, msg);
            adapter.notifyDataSetChanged();
            MessageDBManager.getManager().updateStatus(msg.gid, "1");
        }
    }
    
    public void onShowNextPage() {
        currentPage = (currentPage + 0x1);
        loadMessageRecord(currentPage);
    }
    
    public int getConentLayout() {
        return R.layout.activity_system_message;
    }
    
    public int getActionBarTitle() {
        return R.string.common_sysmessage;
    }
    
    public boolean onOptionsItemSelected(MenuItem item) {
        switch(item.getItemId()) {
            case R.id.menu_icon:
            {
                customDialog.show();
                break;
            }
        }
        return super.onOptionsItemSelected(item);
    }
    
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.single_icon, menu);
        menu.findItem(R.id.menu_icon).setIcon(R.drawable.ofm_delete_icon);
        return super.onCreateOptionsMenu(menu);
    }
    
    public void onLeftClick() {
        customDialog.dismiss();
    }
    
    public void onRightClick() {
        MessageDBManager.getManager().deleteExceptSystemMessageList(containedTypes);
        list.clear();
        adapter.notifyDataSetChanged();
        currentPage = 0x1;
        customDialog.dismiss();
    }
}
