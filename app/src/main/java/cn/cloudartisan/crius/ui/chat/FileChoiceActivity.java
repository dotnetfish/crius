/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.ui.chat;

import android.content.Intent;
import android.os.Environment;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import com.alibaba.fastjson.JSON;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.adapter.FileChooseViewAdapter;
import cn.cloudartisan.crius.ui.base.BaseActivity;
import cn.cloudartisan.crius.util.FileTypeIconBuilder;
import cn.cloudartisan.crius.util.FileUtil;
import cn.cloudartisan.crius.util.MD5;

import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;

public class FileChoiceActivity extends BaseActivity implements AdapterView.OnItemClickListener {
    public FileChooseViewAdapter adapter;
    int currentDirIndex;
    TextView currentDirPath;
    File currentFile;
    public List<File> fileList = new ArrayList();
    public ListView fileListView;
    public ArrayList<String> filePaths = new ArrayList();
    
    public void initComponents() {
        setDisplayHomeAsUpEnabled(true);
        fileListView = (ListView)findViewById(R.id.fileListView);
        fileListView.setOnItemClickListener(this);
        findViewById(R.id.parentDirButton).setOnClickListener(this);
        findViewById(R.id.sendFileButton).setOnClickListener(this);
        currentDirPath = (TextView)findViewById(R.id.currentDirPath);
        currentDirPath.setText(Environment.getExternalStorageDirectory().getAbsolutePath());
        updateToFileList(Environment.getExternalStorageDirectory().listFiles());
        Collections.sort(fileList, new FileChooseViewAdapter.FileAscComparator());
        adapter = new FileChooseViewAdapter(this, fileList);
        fileListView.setAdapter(adapter);
    }
    
    public void onClick(View var1) {
        switch(var1.getId()) {
            case R.id.parentDirButton:
                String var4 = (new File(this.currentDirPath.getText().toString())).getParent();
                if(var4 != null) {
                    this.changeFolder(var4);
                    return;
                }
            case R.id.selectedPanel:
            default:
                return;
            case R.id.sendFileButton:
                Intent var3 = new Intent();
                HashMap var2 = new HashMap();
                var2.put("size", String.valueOf(this.currentFile.length()));
                var2.put("name", this.currentFile.getName());
                var2.put("objectKey", MD5.getMD5(this.currentFile.getAbsolutePath()));
                var3.putExtra("file", this.currentFile.getAbsolutePath());
                var3.putExtra("info", JSON.toJSONString(var2));
                this.setResult(-1, var3);
                this.finish();
        }
    }
    
    public void onItemClick(AdapterView<?> arg0, View arg1, int position, long arg3) {
        currentFile = adapter.getItem(position);
        if(currentFile.isDirectory()) {
            changeFolder(currentFile.getAbsolutePath());
            currentDirIndex = fileListView.getFirstVisiblePosition();
            return;
        }
        findViewById(R.id.selectedPanel).setVisibility(View.VISIBLE);
        ((TextView)findViewById(R.id.currentFileSize)).setText(FileUtil.getSizeName(currentFile.length()));
        ((TextView)findViewById(R.id.currentFileName)).setText(currentFile.getName());
        ((ImageView)findViewById(R.id.currentFileIcon)).setImageResource(FileTypeIconBuilder.create(this).getFileIcon(currentFile.getName(), false));
        findViewById(R.id.sendFileButton).setEnabled(true);
    }
    
    public void changeFolder(String path) {
        updateToFileList(new File(path).listFiles());
        adapter.notifyDataSetChanged();
        fileListView.setSelection(currentDirIndex);
        currentDirPath.setText(path);
    }
    
    public void updateToFileList(File[] files) {
        if(files == null) {
            return;
        }
        fileList.clear();
        for(File file :files){
            fileList.add(file);
        }

    }
    
    public int getConentLayout() {
        return R.layout.activity_filechoice;
    }
    
    public int getActionBarTitle() {
        return R.string.label_file_choice;
    }
}
