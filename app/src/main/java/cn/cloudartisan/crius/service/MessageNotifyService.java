/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.service;

import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.os.IBinder;
import android.support.v4.app.NotificationCompat;
import android.view.View;
import android.widget.RemoteViews;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.ClientConfig;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.bean.MessageItemSource;
import cn.cloudartisan.crius.bean.PublicAccount;
import cn.cloudartisan.crius.db.ConfigDBManager;
import cn.cloudartisan.crius.message.parser.MessageParser;
import cn.cloudartisan.crius.message.parser.MessageParserFactory;
import cn.cloudartisan.crius.ui.chat.FriendChatActivity;
import cn.cloudartisan.crius.ui.chat.GroupChatActivity;
import cn.cloudartisan.crius.ui.chat.PubAccountChatActivity;
import cn.cloudartisan.crius.ui.chat.SystemMessageActivity;
import cn.cloudartisan.crius.ui.contact.ContactsVerifyActivity;
import cn.cloudartisan.crius.ui.trend.BottleListActivity;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener;

public class MessageNotifyService extends Service {
    private NotificationManager notificationMgr;
    
    public IBinder onBind(Intent intent) {
        return null;
    }
    
    public void onCreate() {
        super.onCreate();
        notificationMgr = (NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);
    }
    
    public int onStartCommand(Intent intent, int flags, int startId) {
        if(intent == null) {
            return super.onStartCommand(intent, flags, startId);
        }
        Message message = (Message)intent.getSerializableExtra("message");
        if(ClientConfig.notifyIsEnable()) {
            showNofify(message);
        }
        return super.onStartCommand(intent, flags, startId);
    }
    
    public void showNofify(Message message) {
        if(message.type.equals("3")) {
            if("1".equals(ConfigDBManager.getManager().queryValue(message.sender))) {
            }
            return;
        }
        MessageParser messageParser = MessageParserFactory.getFactory().getMessageParser(message.type);
        if(messageParser != null) {
            MessageItemSource source = messageParser.getMessageItemSource(message);
            if(source != null) {
                message.content = messageParser.getMessagePreview(message);//
                PendingIntent contentIntent = PendingIntent.getActivity(this, 0x1, getTargetIntent(source, message.type), PendingIntent.FLAG_CANCEL_CURRENT);
               final RemoteViews remoteView = new RemoteViews(getPackageName(), R.layout.layout_notify_view);
                remoteView.setTextViewText(R.id.title, source.getTitle());
                remoteView.setTextViewText(R.id.message, message.content);
                if(source.getWebIcon() != null) {
                    ImageLoader.getInstance().loadImage(source.getWebIcon(), new SimpleImageLoadingListener() {

                        public void onLoadingComplete(String arg0, View arg1, Bitmap bitmap) {
                            remoteView.setImageViewBitmap(R.id.icon, bitmap);
                        }
                    });
                }
                NotificationCompat.Builder nb = new NotificationCompat.Builder(this);
               nb.setAutoCancel(true).setContent(remoteView).setDefaults(-0x1)
               .setWhen(Long.valueOf(message.createTime).longValue())
              .setSmallIcon(R.drawable.icon_notify)
              .setTicker(getString(R.string.title_notify_ticker, new Object[] {source.getTitle()}))
               .setContentTitle(source.getTitle())
               .setContentText(message.content)
                .setDefaults(0x4)
                .setContentIntent(contentIntent);
                notificationMgr.notify(R.layout.layout_notify_view, nb.build());
            }
        }
    }
    
    public void onDestroy() {
        if(notificationMgr != null) {
            notificationMgr.cancel(R.layout.layout_notify_view);
        }
        super.onDestroy();
    }
    
    private Intent getTargetIntent(MessageItemSource source, String msgType) {
        if(msgType.equals("0")) {
            Intent intent = new Intent(this, FriendChatActivity.class);
            intent.putExtra("othersId", source.getId());
            intent.putExtra("othersName", source.getName());
            return intent;
        }
        if(msgType.equals("3")) {
            Intent intent = new Intent(this, GroupChatActivity.class);
            intent.putExtra("othersId", source.getId());
            intent.putExtra("othersName", source.getName());
            return intent;
        }
        if(msgType.equals("700")) {
            Intent intent = new Intent(this, BottleListActivity.class);
            return intent;
        }
        if(msgType.equals("201")) {
            Intent intent = new Intent(this, PubAccountChatActivity.class);
            intent.putExtra(PublicAccount.NAME, source);
            return intent;
        }
        if((msgType.equals("100")) || (msgType.equals("102")) || (msgType.equals("105"))) {
            return new Intent(this, ContactsVerifyActivity.class);
        }
        return new Intent(this, SystemMessageActivity.class);
    }
}
