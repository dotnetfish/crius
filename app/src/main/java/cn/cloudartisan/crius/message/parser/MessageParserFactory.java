/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.message.parser;

import cn.cloudartisan.crius.app.Global;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.util.StringUtils;

import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Properties;

public class MessageParserFactory {
    static MessageParserFactory factory;
    static HashMap<String, MessageParser> parsers;
    static Properties properties;
    
    static {
        parsers = new HashMap();
        properties = new Properties();
    }
    
    private MessageParserFactory() {
        InputStream in = MessageParserFactory.class.getResourceAsStream("parsers.properties");
        try {
            properties.load(in);
            return;
        } catch(IOException e) {
            e.printStackTrace();
        }
    }
    
    public static MessageParserFactory getFactory() {
        if(factory == null) {
            factory = new MessageParserFactory();
        }
        return factory;
    }
    
    public MessageParser getMessageParser(String msgType) {
        if(parsers.get(msgType) == null) {
            try {
                parsers.put(msgType, (MessageParser)Class.forName(properties.getProperty(msgType)).newInstance());
            } catch(Exception localException1) {
            }
        }
        return (MessageParser)parsers.get(msgType);
    }
    
    public static String getPreviewText(Message message) {
        if("1".equals(message.fileType)) {
            return "[\u56fe\u7247]";
        }
        if("3".equals(message.fileType)) {
            return "[\u6587\u4ef6]";
        }
        if("2".equals(message.fileType)) {
            return "[\u8bed\u97f3]";
        }
        if("4".equals(message.fileType)) {
            return "[\u5730\u56fe]";
        }
        if((StringUtils.isEmpty(message.fileType)) || ("0".equals(message.fileType))) {
            if(message.sender.equals(Global.getCurrentUser().getAccount())) {
                return message.content;
            }
            return message.content;
        }
        return "";
    }
}
