/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.component;

import android.content.Context;
import android.graphics.drawable.AnimationDrawable;
import android.media.MediaPlayer;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.Constant;
import cn.cloudartisan.crius.app.GlobalMediaPlayer;
import cn.cloudartisan.crius.app.GlobalVoicePlayer;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.db.MessageDBManager;

import java.io.File;

public class ChatVoiceView extends RelativeLayout implements View.OnClickListener,
        GlobalVoicePlayer.OnPlayListener //,OSSFileLoader.FileLoadedCallback
{
    Context _context;
    int fwidth;
    boolean isSelf;
    String length;
    Message message;
    File voiceFile;
    String voiceKey;
    
    public ChatVoiceView(Context context, AttributeSet attrs) {
        super(context, attrs, 0);
        _context = context;
        fwidth = ((WindowManager)_context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay().getWidth();
        float scale = context.getResources().getDisplayMetrics().density;
        fwidth = (fwidth - (int)((75.0f * scale) + 0.5f));
    }
    
    public void initView(boolean isSelf, Message msg) {
        message = msg;
        this.isSelf = isSelf;
        voiceKey = msg.file;
        length = msg.content;
        loadVoiceFile();
        removeAllViews();
        if(isSelf) {
            addView(LayoutInflater.from(_context).inflate(R.layout.layout_chat_voice_item_self, null), 0);
        } else {
            addView(LayoutInflater.from(_context).inflate(R.layout.layout_chat_voice_item_other, null), 0);
            if(!"2".equals(message.status)) {
                findViewById(R.id.voiceReadDot).setVisibility(View.VISIBLE);
            } else {
                findViewById(R.id.voiceReadDot).setVisibility(View.INVISIBLE);
            }
        }
        ((TextView)findViewById(R.id.lengthTextView)).setText("\"");
        ((AnimationDrawable)((ImageView)findViewById(R.id.waveformAnim)).getDrawable()).start();

        int normalWidth = _context.getResources().getDimensionPixelOffset(R.dimen.chat_voice_width);
        if(Integer.parseInt(length) > 3) {
            int w = normalWidth + ((Integer.parseInt(length) * (fwidth - normalWidth)) / 0x3c);
            getLayoutParams().width = w;
            return;
        }
        getLayoutParams().width = normalWidth;
    }
    
    private void loadVoiceFile() {
        setTag(voiceKey);
        voiceFile = new File(Constant.CACHE_DIR_VOICE, voiceKey);
        if(!voiceFile.exists()) {
            voiceFile = null;
           // OSSFileLoader.getFileLoader(_context).loadVoiceFile("lvxin-files", voiceKey, this);
        }
    }
    
    public void onClick(View v) {
        if(voiceFile != null) {
            findViewById(R.id.waveformImage).setVisibility(View.GONE);
            findViewById(R.id.waveformImage).setVisibility(View.VISIBLE);
            GlobalVoicePlayer.getPlayer().start(voiceFile, this);
        }
    }
    
    public void onCompletion(MediaPlayer mp) {
        GlobalMediaPlayer.getPlayer().start(R.raw.play_completed);
        onVoiceStop();
    }
    
    public void onVoiceStop() {
        findViewById(R.id.waveformAnim).setVisibility(View.VISIBLE);
        findViewById(R.id.waveformAnim).setVisibility(View.GONE);
        if(!isSelf) {
            message.status = "2";
            findViewById(R.id.voiceReadDot).setVisibility(View.INVISIBLE);
            MessageDBManager.getManager().updateStatus(message.gid, "2");
        }
    }
    
    public void fileLoaded(File file, String currentKey) {
        ChatVoiceView chatVoiceView = this;
        if(getParent().getParent().getParent() != null) {
            View target = ((View)getParent().getParent().getParent()).findViewWithTag(currentKey);
            if((target != null) && (target instanceof ChatVoiceView)) {
                chatVoiceView = (ChatVoiceView)target;
            }
        }
        chatVoiceView.voiceFile = file;
    }
}
