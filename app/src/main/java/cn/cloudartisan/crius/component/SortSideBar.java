/**
 * Generated by smali2java 1.0.0.558
 * Copyright (C) 2013 Hensence.com
 */

package cn.cloudartisan.crius.component;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Typeface;
import android.graphics.drawable.ColorDrawable;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;
import android.widget.TextView;
import cn.cloudartisan.crius.R;

public class SortSideBar extends View {
    public static String[] b = new String[]{"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "TrendDashboard", "U", "V", "W", "X", "Y", "Z", "#"};

    private TextView mTextDialog;
    private SortSideBar.OnTouchCharChangedListener onTouchCharChangedListener;
    private int choose = -1;
    private Paint paint = new Paint();

    public void setTextView(TextView mTextDialog) {
        this.mTextDialog = mTextDialog;
    }

    public SortSideBar(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    public SortSideBar(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public SortSideBar(Context context) {
        super(context);
    }

    protected void onDraw(Canvas canvas) {
        super.onDraw(canvas);
        int height = getHeight();
        int width = getWidth();
        int singleHeight = height / b.length;
        for(int i=0;i<b.length;i++){
            paint.setColor(Color.rgb(0x21, 0x41, 0x62));
            paint.setTypeface(Typeface.DEFAULT_BOLD);
            paint.setAntiAlias(true);
            int size = getResources().getDimensionPixelOffset(R.dimen.sort_char_size);
            paint.setTextSize((float) size);
            if (i == choose) {
                paint.setColor(Color.parseColor("#45C01A"));
                paint.setFakeBoldText(true);
            }
            float xPos = (float) (width / 0x2) - (paint.measureText(b[i]) / 2.0f);
            float yPos = (float) ((singleHeight * i) + singleHeight);
            canvas.drawText(b[i], xPos, yPos, paint);
        }

        paint.reset();
    }

    public boolean dispatchTouchEvent(MotionEvent event) {
        int action = event.getAction();
        float y = event.getY();
        int oldChoose = choose;
        int c = (int) ((y / (float) getHeight()) * (float) b.length);
        switch (action) {
            case 1:

                setBackgroundDrawable(new ColorDrawable(0x0));
                choose = -0x1;
                invalidate();
                if (mTextDialog != null) {
                    mTextDialog.setVisibility(View.VISIBLE);
                }
            case 3:

                setBackgroundDrawable(new ColorDrawable(0x0));
                choose = -0x1;
                invalidate();
                if (mTextDialog != null) {
                    mTextDialog.setVisibility(View.INVISIBLE);
                }
            case 2: {
                setBackgroundDrawable(new ColorDrawable(0x7f000000));
                if (oldChoose != c) {
                    if ((c >= 0) && (c < b.length)) {
                        if (onTouchCharChangedListener != null) {
                            onTouchCharChangedListener.onCharChanged(b[c]);
                        }
                        if (mTextDialog != null) {
                            mTextDialog.setText(b[c]);
                            mTextDialog.setVisibility(View.VISIBLE);
                        }
                        choose = c;
                        invalidate();
                    }
                }
            }
        }
            return true;


    }

    public void setOnTouchCharChangedListener(SortSideBar.OnTouchCharChangedListener onTouchCharChangedListener) {
        this.onTouchCharChangedListener = onTouchCharChangedListener;
    }

    public interface OnTouchCharChangedListener {
        void onCharChanged(String paramString);
    }
}
