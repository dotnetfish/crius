/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.component;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.widget.ListView;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.util.AppTools;

public class PubChatListView extends ListView {
    public static final String ACTION_MESSAGE_SEND_STATUS = "com.farsunset.lvxin.MESSAGE_SEND_STATUS";
    private static final int DONE = 0x3;
    private static final int LOADING = 0x4;
    private static final int PULL_To_REFRESH = 0x1;
    private static final int RATIO = 0x3;
    private static final int REFRESHING = 0x2;
    private static final int RELEASE_To_REFRESH=0;
    Context context;
    private int firstItemIndex;
    private View header;
    private int headerHeight;
    private boolean isBack;
    private boolean isRecored;
    public PubChatListView.MessageSendReceiver messageSendReceiver;
    PubChatListView.OnOptEventListener onOptEventListener;
    private int startY;
    private int state;
    
    public PubChatListView(Context paramContext, AttributeSet paramAttributeSet) {
        super(paramContext, paramAttributeSet);
        init(paramContext);
    }
    
    public void init(Context paramContext) {
        this.context = paramContext;
        this.header = LayoutInflater.from(paramContext).inflate(R.layout.list_chat_header, null);
        AppTools.measureView(this.header);
        this.headerHeight = this.header.getMeasuredHeight();
        addHeaderView(this.header, null, false);
        addFooterView(LayoutInflater.from(paramContext).inflate(R.layout.layout_chat_listview_footer, null));
        this.header.setPadding(0, this.headerHeight * -1, 0, 0);
        this.messageSendReceiver = new MessageSendReceiver();
        paramContext.registerReceiver(this.messageSendReceiver, this.messageSendReceiver.getIntentFilter());

    }
    
    public void doPrevious() {
        state = 0x2;
        changeHeaderViewByState();
        onPrevious();
    }
    
    public boolean onTouchEvent(MotionEvent paramMotionEvent) {
        if(paramMotionEvent.getAction() == 0 && this.onOptEventListener != null) {
            this.onOptEventListener.onTouchDown();
        }

        if(this.getFirstVisiblePosition() != 0 && this.getFirstVisiblePosition() != 1) {
            return super.onTouchEvent(paramMotionEvent);
        } else {
            switch(paramMotionEvent.getAction()) {
                case RELEASE_To_REFRESH:
                    if(this.firstItemIndex == 0 && !this.isRecored) {
                        this.isRecored = true;
                        this.startY = (int)paramMotionEvent.getY();
                    }
                    break;
                case PULL_To_REFRESH:
                    if(this.state != 2 && this.state != 4) {
                        if(this.state == 1) {
                            this.state = 3;
                            this.changeHeaderViewByState();
                        }

                        if(this.state == 0) {
                            this.state = 2;
                            this.changeHeaderViewByState();
                            this.onPrevious();
                        }
                    }

                    this.isRecored = false;
                    this.isBack = false;
                    break;
                case REFRESHING:
                    int var2 = (int)paramMotionEvent.getY();
                    if(this.firstItemIndex == 0 && !this.isRecored) {
                        this.isRecored = true;
                        this.startY = var2;
                    }

                    if(this.state != 2 && this.isRecored && this.state != 4) {
                        if(this.state == 0) {
                            this.setSelection(0);
                            if((var2 - this.startY) / 3 < this.headerHeight && var2 - this.startY > 0) {
                                this.state = 1;
                                this.changeHeaderViewByState();
                            } else if(var2 - this.startY <= 0) {
                                this.state = 3;
                                this.changeHeaderViewByState();
                            }
                        }

                        if(this.state == 1) {
                            this.setSelection(0);
                            if((var2 - this.startY) / 3 >= this.headerHeight) {
                                this.state = 0;
                                this.isBack = true;
                                this.changeHeaderViewByState();
                            } else if(var2 - this.startY <= 0) {
                                this.state = 3;
                                this.changeHeaderViewByState();
                            }
                        }

                        if(this.state == 3 && var2 - this.startY > 0) {
                            this.state = 1;
                            this.changeHeaderViewByState();
                        }

                        if(this.state == 1) {
                            this.header.setPadding(0, this.headerHeight * -1 + (var2 - this.startY) / 3, 0, 0);
                        }

                        if(this.state == 0) {
                            this.header.setPadding(0, (var2 - this.startY) / 3 - this.headerHeight, 0, 0);
                        }
                    }
            }

            return super.onTouchEvent(paramMotionEvent);
        }
    }
    
    private void changeHeaderViewByState() {
        switch (this.state)
        {
            case 0:
            default:
            case 1:

                if(isBack)
                this.isBack = false;
                this.header.setPadding(0, this.headerHeight * -1, 0, 0);
                return;
            case 2:
                this.header.setPadding(0, 0, 0, 0);
                return;
        }

    }
    
    public void previousComplete() {
        state = 0x3;
        changeHeaderViewByState();
    }
    
    public void setSelection(int index) {
        setTranscriptMode(0x1);
        super.setSelection(index);
    }
    
    private void onPrevious() {
        if(onOptEventListener != null) {
            onOptEventListener.onPreviouPage();
        }
    }
    
    public void setOnOptEventListener(PubChatListView.OnOptEventListener onOptEventListener) {
        this.onOptEventListener = onOptEventListener;
    }
    public  interface OnOptEventListener
    {
        void onPreviouPage();

         void onPubMenuFinish();

        void onTouchDown();
    }

    public class MessageSendReceiver
            extends BroadcastReceiver
    {
        public MessageSendReceiver() {}

        public IntentFilter getIntentFilter()
        {
            IntentFilter localIntentFilter = new IntentFilter();
            localIntentFilter.addAction("com.farsunset.lvxin.MESSAGE_SEND_STATUS");
            return localIntentFilter;
        }

        public void onReceive(Context paramContext, Intent paramIntent)
        {
            Object localObject;
            boolean bool;
            if (paramIntent.getAction().equals("com.farsunset.lvxin.MESSAGE_SEND_STATUS"))
            {
                localObject = paramIntent.getSerializableExtra("target");
                bool = paramIntent.getBooleanExtra("isSuccessed", true);
                if (localObject instanceof Message) {

                    Message message = (Message) localObject;
                    if (bool) {
                        if (message.status == "-3" || message.status == "1") {
                            MessageDBManager.getManager().updateStatus(message.gid, message.status);
                            Intent intent = new Intent();
                            intent.putExtra(Message.NAME, paramIntent);
                            intent.setAction("com.farsunset.cim.SEND_STATUS_CHANGED");
                            paramContext.sendBroadcast(intent);
                            PubToMessageTextView textView = (PubToMessageTextView) PubChatListView.this.findViewWithTag(paramIntent);
                            if (textView != null) {
                                textView.onMessageSend(message, bool);
                            }

                        }
                    }
                }
            }

            PubChatListView.this.onOptEventListener.onPubMenuFinish();
        }
    }
}
