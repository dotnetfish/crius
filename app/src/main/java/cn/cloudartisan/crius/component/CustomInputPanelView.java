/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.component;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.text.TextUtils;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.ui.chat.FileChoiceActivity;
import cn.cloudartisan.crius.ui.chat.MapLocationActivity;
import cn.cloudartisan.crius.ui.util.ImageChoiceActivity;
import cn.cloudartisan.crius.util.StringUtils;

import java.io.File;

public class CustomInputPanelView extends SimpleInputPanelView {
    View centerInputBox;
    View chatingSelectMore;
    View chatingSelectMorePanel;
    public File photoFile;
    View voiceSwitchButton;
    
    public CustomInputPanelView(Context context, AttributeSet attrs) {
        super(context, attrs);
        _context = context;
    }
    
    public void onFinishInflate() {
        super.onFinishInflate();
        chatingSelectMorePanel = findViewById(R.id.panelAioTool);
        chatingSelectMore = findViewById(R.id.chating_select_more);
        voiceSwitchButton = findViewById(R.id.voiceSwitchButton);
        chatingSelectMore.setOnClickListener(this);
        findViewById(R.id.tool_camera).setOnClickListener(this);
        findViewById(R.id.tool_photo).setOnClickListener(this);
        findViewById(R.id.tool_file).setOnClickListener(this);
        findViewById(R.id.tool_location).setOnClickListener(this);
        voiceSwitchButton.setOnClickListener(this);
        findViewById(R.id.keyboardSwitchButton).setOnClickListener(this);
        centerInputBox = findViewById(R.id.centerInputBox);
    }
    
    public void onClick(View view) {
        switch(view.getId()) {
            case R.id.chat_emotion:
            {
                if(emoticoPanelView.getVisibility() == View.VISIBLE) {
                    emoticoPanelView.setVisibility(View.GONE);
                    chatEmotionButton.setSelected(false);
                } else {
                    chatEmotionButton.setSelected(true);
                    emoticoPanelView.setVisibility(View.VISIBLE);
                    chatingSelectMorePanel.setVisibility(View.GONE);
                    inputMethodManager.hideSoftInputFromWindow(messageEditText.getWindowToken(), 0);
                }
                centerInputBox.setVisibility(View.VISIBLE);
                findViewById(R.id.keyboardSwitchButton).setVisibility(View.GONE);
                findViewById(R.id.voiceButton).setVisibility(View.GONE);
                if(StringUtils.isEmpty(messageEditText.getText().toString().trim())) {
                    voiceSwitchButton.setVisibility(View.VISIBLE);
                }
                return;
            }
            case R.id.chating_select_more:
            {
                if(chatingSelectMorePanel.getVisibility() == View.VISIBLE) {
                    chatingSelectMorePanel.setVisibility(View.GONE);
                } else {
                    chatingSelectMorePanel.setVisibility(View.VISIBLE);
                    emoticoPanelView.setVisibility(View.GONE);
                    chatEmotionButton.setSelected(false);
                    inputMethodManager.hideSoftInputFromWindow(messageEditText.getWindowToken(), 0x0);
                }
                centerInputBox.setVisibility(View.VISIBLE);
                findViewById(R.id.keyboardSwitchButton).setVisibility(View.GONE);
                findViewById(R.id.voiceButton).setVisibility(View.GONE);
                if(StringUtils.isEmpty(messageEditText.getText().toString().trim())) {
                    voiceSwitchButton.setVisibility(View.VISIBLE);
                }
                return;
            }
            case R.id.voiceSwitchButton:
            {
                chatingSelectMore.setVisibility(View.VISIBLE);
                sendButton.setVisibility(View.GONE);
                emoticoPanelView.setVisibility(View.GONE);
                chatEmotionButton.setSelected(false);
                chatingSelectMorePanel.setVisibility(View.GONE);
                findViewById(R.id.keyboardSwitchButton).setVisibility(View.VISIBLE);
                findViewById(R.id.voiceButton).setVisibility(View.VISIBLE);
                centerInputBox.setVisibility(View.GONE);
                voiceSwitchButton.setVisibility(View.GONE);
                inputMethodManager.hideSoftInputFromWindow(messageEditText.getWindowToken(), 0x0);
                return;
            }
            case R.id.keyboardSwitchButton:
            {
                centerInputBox.setVisibility(View.VISIBLE);
                chatingSelectMorePanel.setVisibility(View.GONE);
                findViewById(R.id.keyboardSwitchButton).setVisibility(View.VISIBLE);
                findViewById(R.id.voiceButton).setVisibility(View.VISIBLE);
                voiceSwitchButton.setVisibility(View.VISIBLE);
                if(!TextUtils.isEmpty(messageEditText.getText().toString())) {
                    chatingSelectMore.setVisibility(View.GONE);
                    sendButton.setVisibility(View.VISIBLE);
                }
                return;
            }
            case R.id.tool_camera:
            {
                photoFile = new File("/" + System.currentTimeMillis() + ".jpg");
                Intent intentCamera = new Intent("android.media.action.IMAGE_CAPTURE");
                intentCamera.putExtra("orientation", 0x0);
                intentCamera.putExtra("output", Uri.fromFile(photoFile));
                ( (Activity)_context).startActivityForResult(intentCamera, 0x1);
                return;
            }
            case R.id.tool_photo:
            {
                Intent intentFromGallery = new Intent(_context, ImageChoiceActivity.class);
                ((Activity)_context).startActivityForResult(intentFromGallery, 0x2);
                return;
            }
            case R.id.tool_file:
            {
                Intent intentFile = new Intent(_context, FileChoiceActivity.class);
                ((Activity)_context).startActivityForResult(intentFile, 0x3);
                return;
            }
            case R.id.tool_location:
            {
                Intent intentLoc = new Intent(_context, MapLocationActivity.class);
                ((Activity)_context).startActivityForResult(intentLoc, 0x4);
                return;
            }
            case R.id.sendMessageButton:
            {
                onOperationListener.onSendContent(messageEditText.getText().toString());
                emoticoPanelView.setVisibility(View.GONE);
                chatingSelectMorePanel.setVisibility(View.GONE);
                chatEmotionButton.setSelected(false);
                break;
            }
        }
    }
    
    public boolean onTouch(View v, MotionEvent event) {
        emoticoPanelView.setVisibility(View.GONE);
        chatingSelectMorePanel.setVisibility(View.GONE);
        chatEmotionButton.setSelected(false);
        onOperationListener.onKeyboardShow();
        return false;
    }
    
    public void onTextChanged(CharSequence content, int i, int j, int k) {
        if(messageEditText.getVisibility() != View.VISIBLE) {
            return;
        }
        if(!StringUtils.isEmpty(content)) {
            chatingSelectMore.setVisibility(View.GONE);
            sendButton.setVisibility(View.VISIBLE);
            return;
        }
        chatingSelectMore.setVisibility(View.VISIBLE);
        sendButton.setVisibility(View.GONE);
    }
    
    public void reset() {
        emoticoPanelView.setVisibility(View.GONE);
        chatEmotionButton.setSelected(false);
        inputMethodManager.hideSoftInputFromWindow(messageEditText.getWindowToken(), 0);
        chatingSelectMorePanel.setVisibility(View.GONE);
    }
}
