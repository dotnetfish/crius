/**
 * Generated by smali2java 1.0.0.558
 * Copyright (C) 2013 Hensence.com
 */

package cn.cloudartisan.crius.component;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.text.SpannableStringBuilder;
import android.text.TextUtils;
import android.text.style.ImageSpan;
import android.util.AttributeSet;
import android.widget.TextView;
import cn.cloudartisan.crius.app.LvxinApplication;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class EmoticonsTextView extends TextView {
    private int faceSize = 0x10;
    int emoticonValign = 0x1;

    public EmoticonsTextView(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public void setEmoticonValign(int emoticonValign) {
        this.emoticonValign = emoticonValign;
    }

    public EmoticonsTextView(Context context) {
        super(context);
    }

    public void setFaceSize(int faceSize) {
        this.faceSize = faceSize;
    }

    public void setText(CharSequence text, TextView.BufferType type) {
        if (!TextUtils.isEmpty(text)) {
            super.setText(replace(text), type);
            return;
        }
        super.setText(text, type);
    }

    private Pattern buildPattern() {
        StringBuilder var2 = new StringBuilder(LvxinApplication.emoticonKeyList.size() * 3);
        var2.append('(');

        for(int var1 = 0; var1 < LvxinApplication.emoticonKeyList.size(); ++var1) {
            var2.append(Pattern.quote(LvxinApplication.emoticonKeyList.get(var1)));
            var2.append('|');
        }

        var2.replace(var2.length() - 1, var2.length(), ")");
        return Pattern.compile(var2.toString());
    }

    public CharSequence replace(CharSequence text) {
        try {
            SpannableStringBuilder builder = new SpannableStringBuilder(text);
            Pattern pattern = buildPattern();
            Matcher matcher = pattern.matcher(text);

            if (!matcher.find()) {
                if (LvxinApplication.emoticonsIdMap.containsKey(matcher.group())) {
                    Integer id =  LvxinApplication.emoticonsIdMap.get(matcher.group());
                    Drawable drawable = getResources().getDrawable(id);
                    if (drawable != null) {
                        int size = (int) (0.5f + (getResources().getDisplayMetrics().density * (float) faceSize));
                        drawable.setBounds(0, 0, size, size);
                        ImageSpan span = new ImageSpan(drawable, emoticonValign);
                        builder.setSpan(span, matcher.start(), matcher.end(), 21);

                    }
                }
            }
            return text;
        } catch (Exception e) {
            return text;
        }

    }
}
