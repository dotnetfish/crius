/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.component;

import android.content.Context;
import android.graphics.Bitmap;
import android.util.AttributeSet;
import android.view.View;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.alibaba.fastjson.JSON;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.bean.OSSImage;
import cn.cloudartisan.crius.listener.OnUploadProgressListener;
import cn.cloudartisan.crius.util.StringUtils;
import cn.cloudartisan.crius.widget.SinglePhotoViewDialog;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.FailReason;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
import com.nostra13.universalimageloader.core.listener.ImageLoadingListener;

import java.text.DecimalFormat;

public class ChatWebImageView extends RelativeLayout implements View.OnClickListener, ImageLoadingListener, OnUploadProgressListener {
    Context _context;
    ImageView image;
    String key;
    Message message;
    DisplayImageOptions options;
    int orgHeight;
    int orgWidth;
    TextView progressText;
    View progressbar;
    DecimalFormat format = new DecimalFormat("0.00");
    
    public ChatWebImageView(Context context, AttributeSet attrs) {
        super(context, attrs, 0x0);
        _context = context;
    }
    
    public void onFinishInflate() {
        super.onFinishInflate();
        image = (ImageView)findViewById(R.id.image);
        progressbar = findViewById(R.id.loadImagePprogressbar);
        progressText = (TextView)findViewById(R.id.progressText);
        options = new DisplayImageOptions.Builder()
                .displayer(new RoundedBitmapDisplayer(0xa)).cacheInMemory(true).cacheOnDisk(true)
                .considerExifParams(true).cacheInMemory(true).cacheOnDisk(true).build();
    }
    
    public void initViews(Message msg) {
        message = msg;
        key = JSON.parseObject(message.content).getString("thumbnail");
        String url = StringUtils.getOSSFileURI("lvxin-files", key);
        ImageLoader.getInstance().displayImage(url, image, options, this);
    }
    
    public void onClick(View view) {
        SinglePhotoViewDialog dialog = new SinglePhotoViewDialog(_context);
        OSSImage image = new OSSImage();
        image.thumbnail = key;
        image.image = JSON.parseObject(message.content).getString("image");
        dialog.show(image);
    }
    
    public void onLoadingStarted(String imageUri, View view) {
        progressbar.setVisibility(View.VISIBLE);
    }
    
    public void onLoadingFailed(String imageUri, View view, FailReason failReason) {
        onLoadingComplete(imageUri, view, null);
    }
    
    public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
        ChatWebImageView chatWebImageView = this;
        if(getParent().getParent().getParent() != null) {
            View target = ((View)getParent().getParent().getParent()).findViewWithTag(imageUri);
            if((target != null) && (target instanceof ChatWebImageView)) {
                chatWebImageView =(ChatWebImageView) target;
            }
        }
        chatWebImageView.orgWidth = JSON.parseObject(message.content).getIntValue("tw");
        chatWebImageView.orgHeight = JSON.parseObject(message.content).getIntValue("th");
        if(orgWidth > orgHeight) {
            chatWebImageView.image.getLayoutParams().height = _context.getResources().getDimensionPixelOffset(R.dimen.chat_thumbnail_min_side);
            chatWebImageView.image.getLayoutParams().width = ((chatWebImageView.image.getLayoutParams().height * chatWebImageView.orgWidth) / chatWebImageView.orgHeight);
        } else {
            chatWebImageView.image.getLayoutParams().width = _context.getResources().getDimensionPixelOffset(R.dimen.chat_thumbnail_min_side);
            chatWebImageView.image.getLayoutParams().height = ((chatWebImageView.image.getLayoutParams().width * chatWebImageView.orgHeight) / chatWebImageView.orgWidth);
        }
        chatWebImageView.progressText.getLayoutParams().width = chatWebImageView.image.getLayoutParams().width;
        chatWebImageView.progressText.getLayoutParams().height = chatWebImageView.image.getLayoutParams().height;
        chatWebImageView.progressbar.setVisibility(View.GONE);
    }
    
    public void onLoadingCancelled(String imageUri, View view) {
    }
    
    public void onProgress(float progress) {
        progressText.setVisibility(View.VISIBLE);
        progressText.setText("%");
        if(progress >= 100.0f) {
            progressText.setVisibility(View.GONE);
        }
    }
}
