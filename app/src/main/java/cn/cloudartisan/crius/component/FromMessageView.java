/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.component;

import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.Intent;
import android.util.AttributeSet;
import android.view.View;
import android.widget.RelativeLayout;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.app.URLConstant;
import cn.cloudartisan.crius.bean.Friend;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.bean.MessageItemSource;
import cn.cloudartisan.crius.bean.User;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.network.HttpAPIRequester;
import cn.cloudartisan.crius.ui.contact.UserDetailActivity;
import cn.cloudartisan.crius.widget.OptionsDialog;

import java.util.HashMap;

public abstract class FromMessageView extends RelativeLayout implements OptionsDialog.OnOperationListener, View.OnLongClickListener, View.OnClickListener {
    ChatListView.OnMessageDeleteListenter OnMessageDeleteListenter;
    public Context _context;
    public Message message;
    View message_content;
    OptionsDialog optionsDialog;
    MessageItemSource others;
    ChatFileView others_file_layout;
    WebImageView others_headImageView;
    ChatWebImageView others_image_layout;
    ChatMapView others_map_layout;
    EmoticonsTextView others_text;
    ChatVoiceView others_voice_layout;
    User self;
    
    protected abstract void displayMessage();
    
    HashMap<String, Object> apiParams = new HashMap();
    
    public FromMessageView(Context paramContext, AttributeSet paramAttributeSet) {
        super(paramContext, paramAttributeSet);
        _context = paramContext;
    }
    
    public void onFinishInflate() {
        super.onFinishInflate();
        message_content = findViewById(R.id.message_content);
        others_text = (EmoticonsTextView)findViewById(R.id.others_text);
        others_headImageView = (WebImageView)findViewById(R.id.others_headImageView);
        others_image_layout = (ChatWebImageView)findViewById(R.id.others_image_layout);
        others_voice_layout = (ChatVoiceView)findViewById(R.id.others_voice_layout);
        others_file_layout = (ChatFileView)findViewById(R.id.others_file_layout);
        others_map_layout = (ChatMapView)findViewById(R.id.others_map_layout);
        message_content.setOnLongClickListener(this);
        optionsDialog = new OptionsDialog(_context);
        optionsDialog.setOperationListener(this);
        others_headImageView.setOnClickListener(this);
        apiParams.put("type", "108");
    }
    
    public final void displayMessage(Message message, User self, MessageItemSource others) {
       this. self = self;
        this. message = message;
        this. others = others;
        setTag(message);
        others_headImageView.load(others.getWebIcon(), R.drawable.icon_head_default);
        message_content.setOnClickListener(null);
        displayMessage();
        statusHandler();
    }
    
    private void statusHandler() {
        if("0".equals(message.status)) {
            if(message.isNeedShowReadStatus()) {
                apiParams.put("content", message.gid);
                apiParams.put("sender", message.receiver);
                apiParams.put("receiver", message.sender);
                HttpAPIRequester.execute(apiParams,  URLConstant.MESSAGE_SEND_URL);
            }
            MessageDBManager.getManager().updateStatus(message.gid, "1");
        }
    }
    
    public Object getTag() {
        return message_content.getTag(R.id.message_content);
    }
    
    public void setTag(Object obj) {
        message_content.setTag(R.id.message_content, obj);
    }
    
    public void onClick(View v) {
        if((v.getId() == R.id.others_headImageView) && (others instanceof Friend)) {
            Intent intent = new Intent(_context, UserDetailActivity.class);
            intent.putExtra("user", others);
            _context.startActivity(intent);
        }
    }
    
    public void onItemClick(View v) {
        optionsDialog.dismiss();
        if(v.getId() == R.id.copy) {
            ClipboardManager cmb = (ClipboardManager)_context.getSystemService(Context.CLIPBOARD_SERVICE);
            cmb.setPrimaryClip(ClipData.newPlainText(null, message.content));
        }
        if(v.getId() == R.id.delete) {
            OnMessageDeleteListenter.onDelete(message);
        }
    }
    
    public void setOnMessageDeleteListenter(ChatListView.OnMessageDeleteListenter onMessageDeleteListenter) {
        OnMessageDeleteListenter = onMessageDeleteListenter;
    }
    
    public boolean onLongClick(View arg0) {
        optionsDialog.show();
        if((message.fileType != null) && (!message.fileType.equals("0"))) {
            optionsDialog.hide(R.id.copy);
        }
        return false;
    }
}
