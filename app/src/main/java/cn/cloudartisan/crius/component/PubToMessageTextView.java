/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package cn.cloudartisan.crius.component;

import android.content.ClipData;
import android.content.ClipboardManager;
import android.content.Context;
import android.content.Intent;
import android.util.AttributeSet;
import android.view.View;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import cn.cloudartisan.crius.R;
import cn.cloudartisan.crius.bean.Message;
import cn.cloudartisan.crius.bean.MessageItemSource;
import cn.cloudartisan.crius.bean.PublicAccount;
import cn.cloudartisan.crius.bean.User;
import cn.cloudartisan.crius.db.MessageDBManager;
import cn.cloudartisan.crius.network.PublicAccountMenuHander;
import cn.cloudartisan.crius.util.FileURLBuilder;
import cn.cloudartisan.crius.widget.OptionsDialog;

public class PubToMessageTextView extends RelativeLayout implements View.OnLongClickListener, OptionsDialog.OnOperationListener, View.OnClickListener {
    ChatListView.OnMessageDeleteListenter OnMessageDeleteListenter;
    public Context _context;
    WebImageView icon;
    View icon_resend;
    Message message;
    EmoticonsTextView my_text;
    OptionsDialog optionsDialog;
    MessageItemSource others;
    User self;
    ProgressBar sendProgressbar;
    
    public PubToMessageTextView(Context paramContext, AttributeSet paramAttributeSet) {
        super(paramContext, paramAttributeSet);
        _context = paramContext;
    }
    
    public void setOnMessageDeleteListenter(ChatListView.OnMessageDeleteListenter onMessageDeleteListenter) {
        OnMessageDeleteListenter = onMessageDeleteListenter;
    }
    
    public void onFinishInflate() {
        icon_resend = findViewById(R.id.icon_resend);
        icon_resend.setOnClickListener(this);
        sendProgressbar = (ProgressBar)findViewById(R.id.sendinProgressbar);
        icon = (WebImageView)findViewById(R.id.icon);
        my_text = (EmoticonsTextView)findViewById(R.id.my_text);
        optionsDialog = new OptionsDialog(_context);
        optionsDialog.setOperationListener(this);
        sendProgressbar.setVisibility(View.GONE);
    }
    
    public final void displayMessage(Message message, User self, MessageItemSource others) {
        this.message = message;
        this.self = self;
        this.others = others;
        setTag(message);
        icon.load(FileURLBuilder.getUserIconUrl(self.getAccount()), R.drawable.icon_head_default);
        my_text.setFaceSize(0x18);
        my_text.setText(message.content);
        my_text.setOnLongClickListener(this);
        statusHandler();
    }
    
    private void statusHandler() {
        if("-2".equals(message.status)) {
            sendProgressbar.setVisibility(View.VISIBLE);
        } else {
            sendProgressbar.setVisibility(View.GONE);
        }
        if("-3".equals(message.status)) {
            icon_resend.setVisibility(View.VISIBLE);
            icon_resend.setOnClickListener(this);
        } else {
            icon_resend.setVisibility(View.GONE);
        }
        if("-1".equals(message.status)) {
            sendProgressbar.setVisibility(View.VISIBLE);
            sendMessage();
        }
    }
    
    private void sendMessage() {
        MessageDBManager.getManager().saveMessage(message);
        icon_resend.setVisibility(View.GONE);
        message.status = "-2";
        MessageDBManager.getManager().updateStatus(message.gid, "-2");
        Intent intent = new Intent();
        intent.putExtra(Message.NAME, message);
        intent.setAction("com.farsunset.cim.SEND_STATUS_CHANGED");
        _context.sendBroadcast(intent);
        PublicAccountMenuHander.execute((PublicAccount)others, message);
    }
    
    public void onMessageSend(Message msg, boolean isSuccessed) {
        if(!isSuccessed) {
            icon_resend.setVisibility(View.VISIBLE);
        } else {
            icon_resend.setVisibility(View.GONE);
        }
        message.status = msg.status;
        sendProgressbar.setVisibility(View.GONE);
    }
    
    public boolean onLongClick(View arg0) {
        Message message = (Message)getTag();
        optionsDialog.show();
        if((message.fileType != null) && (!message.fileType.equals("0"))) {
            optionsDialog.hide(R.id.copy);
        }
        return false;
    }
    
    public void onItemClick(View v) {
        Message message = (Message)getTag();
        optionsDialog.dismiss();
        if(v.getId() == R.id.copy) {
            ClipboardManager cmb = (ClipboardManager)_context.getSystemService(Context.CLIPBOARD_SERVICE);
            cmb.setPrimaryClip(ClipData.newPlainText(null, message.content));
        }
        if(v.getId() == R.id.delete) {
            OnMessageDeleteListenter.onDelete(message);
        }
    }
    
    public void onClick(View v) {
        if(v.getId() == R.id.icon_resend) {
            sendMessage();
        }
    }
}
